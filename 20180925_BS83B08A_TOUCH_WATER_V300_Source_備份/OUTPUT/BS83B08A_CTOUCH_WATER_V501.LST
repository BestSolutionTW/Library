"File: BS83B08A_CTOUCH_WATER_V501.asm  Assembler  Version 2.98      Page 1


   1  0000              message '***************************************************************'     
   2  0000              message '*PROJECT NAME :BS83B08A CTOUCH  V5.01                         *' 
   3  0000              message '*     VERSION :                                               *' 
   4  0000              message '*     IC BODY :BS83B08A                                       *' 
   5  0000              message '* ICE VERSION :ICE VERSION IDE3000V7.93                       *' 
   6  0000              message '*      REMARK :                                               *' 
   7  0000              message '***************************************************************'
   8  0000              
   9  0000              
  10  0000              ;;        #define OneKeyActiveFunction            ;Touch channel scan type
  11  0000              ;;      #define CStestMode                      ;for cs test define / test key1~key4
  12  0000              		
  13  0000              
  14  0000              
  15  0000                      #define LibraryVersion          501H
  16  0000                      ;--                                                
  17  0000                      #define BalanceCentralPoint     128
  18  0000                      #define UnBalanceOffset         18
  19  0000                      #define NoiseLevel              16
  20  0000                      ;--                  
  21  0000                      #define RAMbank0Address         060H
  22  0000              ;;      #define RAMbank1Address         080H
  23  0000              ;;      #define RAMbank2Address         080H
  24  0000              ;;      #define RAMbank3Address         080H
  25  0000                      ;--
  26  0000                      #define TouchINTaddress         008H
  27  0000                      #define LibraryVersionAddress   TouchINTaddress + 3
  28  0000                      #define TouchTimeBaseINTaddress 014H
  29  0000              
  30  0000              
  31  0000              
  32  0000                      INCLUDE BS83B08A_CTOUCH_WATER_V501.INC  






  33  0000                      INCLUDE BS83B08A_CTOUCH_WATER_V501.MCU     


  34  0000              
  35  0000                      ;-SUBROUTIN
  36  0000                      PUBLIC  _BS83B08A_CTOUCH_WATER_V501_INITIAL 
  37  0000                      PUBLIC  _BS83B08A_CTOUCH_WATER_V501         
  38  0000                      PUBLIC  _LIBRARY_RESET                  
  39  0000                      PUBLIC  _GET_KEY_BITMAP
  40  0000                      PUBLIC  _GET_ENV_VALUE
  41  0000                      PUBLIC  _GET_REF_VALUE
  42  0000                      PUBLIC  _GET_RCC_VALUE
  43  0000                      PUBLIC  _GET_LIB_VER
  44  0000                      PUBLIC  _GET_KEY_AMOUNT
  45  0000                      PUBLIC  _GET_KEY_AMOUNTx3
  46  0000                      PUBLIC  _CHECK_KEY_WAKEUP
  47  0000                    
  48  0000                      ;-DATA
  49  0000                      PUBLIC  _DATA_BUF
  50  0000                      PUBLIC  _GLOBE_VARIES
  51  0000                      PUBLIC  _KEY_REF 
"File: BS83B08A_CTOUCH_WATER_V501.asm  Assembler  Version 2.98      Page 2

  52  0000                      PUBLIC  _KEY_STATUS
  53  0000                      PUBLIC  _TKS_TIME_BASE
  54  0000                      ;PUBLIC  _STANDBY_TIME
  55  0000                      PUBLIC  _KEY_IO_SEL   
  56  0000                      PUBLIC  _KEY_DATA
  57  0000                      
  58  0000                      ;-FLAG
  59  0000                      PUBLIC  _TKS_FLAGA
  60  0000                      PUBLIC  _SCAN_CYCLEF
  61  0000                      PUBLIC  _FORCE_CALIBRATEF
  62  0000                      PUBLIC  _ANY_KEY_PRESSF
  63  0000                      PUBLIC  _TKS_ACTIVEF
  64  0000                      PUBLIC  _TKS_63MSF
  65  0000                      PUBLIC  _TKS_250MSF
  66  0000                      PUBLIC  _TKS_500MSF 
  67  0000                                    
  68  0000                      ;-----------------                                       
  69  0000                      ;-RAM BANK DECLARE
  70  0000                      ;-----------------
  71  0000              ifdef   RAMbank0Address                                                     
  72  0000                      RAMBANK 0 CTOUCH_DATA0
  73  0000              endif
  74  0000              ;----------------------------------
  75  0000              ifdef   RAMbank1Address
  76  0000                      RAMBANK 1 CTOUCH_DATA1           
  77  0000              endif                                                            
  78  0000              ;----------------------------------
  79  0000              ifdef   RAMbank2Address
  80  0000                      RAMBANK 2 CTOUCH_DATA2           
  81  0000              endif                                                            
  82  0000              ;----------------------------------
  83  0000              ifdef   RAMbank3Address
  84  0000                      RAMBANK 3 CTOUCH_DATA3           
  85  0000              endif                                                            
  86  0000              ;----------------------------------
  87  0000                                                                   
  88  0000                      ;-DATA LENGTH DEFINE                                                                    
  89  0000                      #define         BYTE_DATA               1       ;BYTE                                   
  90  0000                      #define         WORD_DATA               2       ;WORD                                   
  91  0000                                                                                                      
  92  0000                                                                                                      
  93  0000              ;--------------------------------                           
  94  0000              ;------- RAM BANK0 AREA ---------                           
  95  0000              ;--------------------------------                           
  96  0000                      CTOUCH_DATA0            .SECTION AT RAMbank0Address   'DATA'                            
  97  0000                                                                                                      
  98  0000              ;-TKS GLOBE VARIES
  99  0000  0007[       _GLOBE_VARIES   DB      KeyAmount+3 DUP(?)                                              
            00
            ]
 100  0007              TKS_OPTIONA     EQU     0                                                               
 101  0007              TKS_OPTIONB     EQU     1                                                               
 102  0007              TKS_OPTIONC     EQU     2                                                               
 103  0007              KEY1_THR        EQU     3                                                               
 104  0007              KEY2_THR        EQU     4                                                               
 105  0007              KEY3_THR        EQU     5                                                               
 106  0007              KEY4_THR        EQU     6  
 107  0007              if      KeyAmount > 4                                        
 108  0007              KEY5_THR        EQU     7                                                               
 109  0007              KEY6_THR        EQU     8                                                               
"File: BS83B08A_CTOUCH_WATER_V501.asm  Assembler  Version 2.98      Page 3

 110  0007              KEY7_THR        EQU     9                                                               
 111  0007              KEY8_THR        EQU     10
 112  0007              endif
 113  0007              if      KeyAmount > 8                                        
 114  0007              KEY9_THR        EQU     11                                                              
 115  0007              KEY10_THR       EQU     12                                                              
 116  0007              KEY11_THR       EQU     13                                                              
 117  0007              KEY12_THR       EQU     14                                                              
 118  0007              endif
 119  0007              if      KeyAmount > 12                                       
 120  0007              KEY13_THR       EQU     15                                                              
 121  0007              KEY14_THR       EQU     16                                                              
 122  0007              KEY15_THR       EQU     17                                                              
 123  0007              KEY16_THR       EQU     18                                                              
 124  0007              endif
 125  0007              ;-OPTION A BIT DEFINE                                                                   
 126  0007              DBCE_DEF0       EQU     0                                                               
 127  0007              DBCE_DEF1       EQU     1                                                               
 128  0007              DBCE_DEF2       EQU     2                                                               
 129  0007              DBCE_DEF3       EQU     3                                                               
 130  0007              CALIBRATE_TIME0 EQU     4                                                               
 131  0007              CALIBRATE_TIME1 EQU     5                                                               
 132  0007              CALIBRATE_TIME2 EQU     6
 133  0007              CALIBRATE_TIME3 EQU     7                                                               
 134  0007              ;-OPTION B BIT DEFINE                                                                   
 135  0007              SENS_LEVEL      EQU     0       ;0/2=SENSITIVITY LOW ; 1/2=SENSITIVITY HIGH            
 136  0007              ;               EQU     1                                                               
 137  0007              ;               EQU     2                                                               
 138  0007              ;               EQU     3                                                              
 139  0007              MAXON0          EQU     4       ;0=MAXIMUM ON TIME DISABLE                              
 140  0007              MAXON1          EQU     5                                                               
 141  0007              MAXON2          EQU     6                                                               
 142  0007              MAXON3          EQU     7                                                               
 143  0007              ;-OPTION C BIT DEFINE                                                                   
 144  0007              RESERVEA_OPN    EQU     0                                                               
 145  0007              RESERVEB_OPN    EQU     1                                                               
 146  0007              SAMPLE_SPEED    EQU     2       ;0/1 NORMAL/FAST SAMPLING SPEED                      
 147  0007              AUTO_RS         EQU     3       ;0/1 MANUAL/AUTO SELECT RS               
 148  0007              CS_PROTECT      EQU     4       ;0/1 DISABLE/ENABLE CS PROTECT MODE                    
 149  0007              ONE_KEY_ACTIVE  EQU     5       ;0/1 ONE/ANY KEY ACTIVE                                 
 150  0007              POWER_SAVE      EQU     6       ;0/1 DISABLE/ENABLE POWER SAVING MODE      
 151  0007              ACTIVE_LOGIC    EQU     7       ;0/1 DISABLE/ENABLE UPDATE REFERENCE WHEN PRESS
 152  0007              
 153  0007              PWM_SYNC        EQU     5
 154  0007              
 155  0007              ;-COMMON RAM DEFINE            
 156  0007  0008[       _DATA_BUF       DB      8 DUP(?)                                                        
            00
            ]
 157  000F              POS_COUNT       EQU     _DATA_BUF[0]                                                    
 158  000F              HYSTERESIS      EQU     _DATA_BUF[1]                                                    
 159  000F              NEG_COUNT       EQU     _DATA_BUF[2]                                                    
 160  000F              KPRESS_AMOUNT   EQU     _DATA_BUF[5]
 161  000F              MAX_COUNT       EQU     _DATA_BUF[6]
 162  000F              MAX_COUNT_CHANNEL EQU   _DATA_BUF[7]
 163  000F              ;-MP & BP BUFFER
 164  000F              BP_BUF          EQU     _DATA_BUF[2] 
 165  000F              MP_BUF          EQU     _DATA_BUF[3]
 166  000F              ;TKMX16DL_BUF    DB      ?
 167  000F              ;TKMX16DH_BUF    DB      ?
"File: BS83B08A_CTOUCH_WATER_V501.asm  Assembler  Version 2.98      Page 4

 168  000F              
 169  000F                    
 170  000F              ;-LIBRARY USED RAM DEFINE
 171  000F              ;_STANDBY_TIME   DB      ?                                                               
 172  000F  00          _TKS_TIME_BASE  DB      ?                                                               
 173  0010  0004[       TKS_STACK       DB      4 DUP(?)
            00
            ]
 174  0014  00          _KEY_IO_SEL     DB      ((KeyAmount-1)/8)+1 DUP(?)   ;BIT CONETNT 1=KEY 0=IO       
 175  0015  00          _KEY_DATA       DB      ((KeyAmount-1)/8)+1 DUP(?)                                      
 176  0016  0002[       TKM_BUF         DB      ((KeyAmount/4)+1) DUP(?)                                 
            00
            ]
 177  0018  00          KEY_BUF         DB      ((KeyAmount-1)/8)+1 DUP(?)                                      
 178  0019  00          KEY_DBCE        DB      ?     
 179  001A  00          KEY_STATE_BUF   DB      ?               
 180  001B  00          CHANNEL_INDEX   DB      ?                                                               
 181  001C  0002[       BALANCE_BUF     DB      2 DUP(?)                                                        
            00
            ]
 182  001E  00          SAMPLE_TIMES    DB      ?                                                               
 183  001F              ;;POWER_ON_STABLEF EQU   SAMPLE_TIMES.6
 184  001F              
 185  001F              ;HALT_CAL_TIME   DB      ?                                                                 
 186  001F              ;;CS_STAY_TIME    DB      ?
 187  001F              
 188  001F  00          TKS_TIMER       DB      ?                                                                         
 189  0020  00          TKS_TIMERB      DB      ?                            
 190  0021              ;--                                               
 191  0021  00          CAL_TIMER       DB      ?                                                                                      
 192  0022              UNBALANCE_TIMER EQU     BALANCE_BUF[1]                    
 193  0022              ;HALT_DATA_BUF   EQU     TKS_TIMER
 194  0022              
 195  0022                                                                             
 196  0022              ;-LIBRARY USED FLAG DEFINE
 197  0022              _TKS_FLAGA      LABEL   BYTE    ;for C complier V3
 198  0022  00          _FORCE_CALIBRATEF DBIT                                                                  
 199  0022              _TKS_ACTIVEF    DBIT                                                                    
 200  0022              _SCAN_CYCLEF    DBIT                                                                    
 201  0022              _ANY_KEY_PRESSF DBIT 
 202  0022              _TKS_63MSF      DBIT                                                                    
 203  0022              _TKS_250MSF     DBIT                                                                    
 204  0022              _TKS_500MSF     DBIT
 205  0022              POWER_ON_STABLEF DBIT
 206  0023              ;;UNBALANCEF      DBIT
 207  0023              
 208  0023              ifdef   RAMbank1Address
 209  0023              ;--------------------------------                              
 210  0023              ;------- RAM BANK1 AREA ---------                              
 211  0023              ;--------------------------------                              
 212  0023                      CTOUCH_DATA1            .SECTION AT RAMbank1Address  'DATA'
 213  0023              endif                                 
 214  0023              
 215  0023              ;-KEY STATUS & TIMER RAM DEFINE                                                                  
 216  0023  0008[       _KEY_STATUS     DB      KeyAmount*(WORD_DATA) DUP(?)
            00
            ]
 217  002B              KEY_PRESSF      EQU     7
 218  002B              KEY_DBCE2       EQU     6
 219  002B              KEY_DBCE1       EQU     5
"File: BS83B08A_CTOUCH_WATER_V501.asm  Assembler  Version 2.98      Page 5

 220  002B              KEY_DBCE0       EQU     4
 221  002B              ;--
 222  002B              CS_INTERFEREF   EQU     3
 223  002B              FILTER_DIRF     EQU     2
 224  002B              IIR_LOOP1       EQU     1
 225  002B              IIR_LOOP0       EQU     0
 226  002B              ;--                                   
 227  002B              _KEY_TIMER      EQU     _KEY_STATUS+1
 228  002B              
 229  002B              
 230  002B              ;-DEFINE KEY_REF RAM                                                                   
 231  002B  0010[       _KEY_REF        DB      KeyAmount*(WORD_DATA+WORD_DATA) DUP(?)
            00
            ]
 232  003B              _KEY_FREQ       EQU     _KEY_REF+1
 233  003B              _BALANCE_CAP3M  EQU     _KEY_REF+2
 234  003B              _BALANCE_CAP11M EQU     _KEY_REF+3
 235  003B                                                                   
 236  003B              ifdef   RAMbank2Address
 237  003B              ;--------------------------------                              
 238  003B              ;------- RAM BANK2 AREA ---------                              
 239  003B              ;--------------------------------                              
 240  003B                      CTOUCH_DATA2            .SECTION AT RAMbank2Address  'DATA'
 241  003B              endif                        
 242  003B                                                                                                      
 243  003B              ;-DEFINE FILTER RAM            
 244  003B  0010[       _M3_LIMIT       DB      KeyAmount*(WORD_DATA+WORD_DATA) DUP(?) 
            00
            ]
 245  004B              _M3_MAXA        EQU     _M3_LIMIT+0
 246  004B              _M3_MAXB        EQU     _M3_LIMIT+1
 247  004B              _M3_MINA        EQU     _M3_LIMIT+2
 248  004B              _HL_DIFF_MAX    EQU     _M3_LIMIT+3
 249  004B              ;_M3_HL_DIFF     EQU     _M3_LIMIT+3
 250  004B              ;--                                                                                     
 251  004B  0010[       _M11_LIMIT      DB      KeyAmount*(WORD_DATA+WORD_DATA) DUP(?) 
            00
            ]
 252  005B              _M11_MAXA       EQU     _M11_LIMIT+0
 253  005B              _M11_MAXB       EQU     _M11_LIMIT+1
 254  005B              _M11_MINA       EQU     _M11_LIMIT+2
 255  005B              ;_M11_HL_DIFF    EQU     _M11_LIMIT+3
 256  005B              _LAST_FREQ      EQU     _M11_LIMIT+3
 257  005B              
 258  005B              UNBALANCEF      		EQU   	SAMPLE_TIMES.7
 259  005B              
 260  005B              
 261  005B  00          WATER_TOUCH_COUNTER DB  ?
 262  005C                       
 263  005C              ifdef   RAMbank3Address
 264  005C              ;--------------------------------                              
 265  005C              ;------- RAM BANK3 AREA ---------                              
 266  005C              ;--------------------------------                              
 267  005C                      CTOUCH_DATA3            .SECTION AT RAMbank3Address  'DATA'
 268  005C              
 269  005C              endif                                 
 270  005C              
 271  005C              
 272  005C                              ;==============
 273  005C                              ;=TKM  INT. ===
"File: BS83B08A_CTOUCH_WATER_V501.asm  Assembler  Version 2.98      Page 6

 274  005C                              ;==============
 275  0000              TOUCH_INT       .SECTION  AT TouchINTaddress  'CODE'
 276  0000  300E                        SET     EMI
 277  0001  2800     R                  JMP     _TKS_SAMPLING_INT
 278  0002                              ;RETI
 279  0002                              ;==============
 280  0002                              ;=LIB VERSION =
 281  0002                              ;==============
 282  0000              CTOUCH_VERSION  .SECTION  AT LibraryVersionAddress 'CODE'
 283  0000  0501                        DC      LibraryVersion
 284  0001              
 285  0001                              ;==============
 286  0001                              ;=TIME BASE INT.
 287  0001                              ;==============
 288  0000              TIME_BASE_INT   .SECTION  AT TouchTimeBaseINTaddress 'CODE'
 289  0000                              ;-COUNT _TKS_TIME_BASE
 290  0000  16EF                        SIZ     _TKS_TIME_BASE
 291  0001  0004                        RETI
 292  0002  1FEF                        SET     _TKS_TIME_BASE
 293  0003  0004                        RETI
 294  0004              
 295  0004              
 296  0004              
 297  0004              
 298  0000              CTOUCH_CODE             .SECTION   'CODE'
 299  0000              ;;***********************************************************                           
 300  0000              ;;*SUB. NAME:                                               *                           
 301  0000              ;;*INPUT    :                                               *                           
 302  0000              ;;*OUTPUT   :                                               *                           
 303  0000              ;;*USED REG.:                                               *                           
 304  0000              ;;*FUNCTION :                                               *                           
 305  0000              ;;***********************************************************
 306  0000              _BS83B08A_CTOUCH_WATER_V501:
 307  0000              
 308  0000                              ;-CLEAR FLAG
 309  0000  7502                        CLR     _SCAN_CYCLEF
 310  0001  7702                        CLR     _TKS_500MSF     ;500 MSF
 311  0002  7682                        CLR     _TKS_250MSF     ;250 MSF
 312  0003  7602                        CLR     _TKS_63MSF      ;62.5 MSF
 313  0004              				
 314  0004                              ;------------------------
 315  0004                              ;-WAIT SAMPLING DONE ----
 316  0004                              ;------------------------
 317  0004  3EC4                        SZ      TKST
 318  0005  2800     R                  JMP     CHECK_SYNC_TIME
 319  0006              
 320  0006                              ;-CHECK IF TKS ACTIVE
 321  0006  7882                        SNZ     _TKS_ACTIVEF
 322  0007  2000     R                  CALL    _PON_CALIBRATE
 323  0008                              ;--
 324  0008                              
 325  0008  7882        		SNZ     _TKS_ACTIVEF
 326  0009  2800     R  		JMP     $+5
 327  000A  78BB        		SNZ	WATER_TOUCH_COUNTER.1
 328  000B  54BB        		INC     WATER_TOUCH_COUNTER
 329  000C  7CBB        		SZ      WATER_TOUCH_COUNTER.1
 330  000D  2800     R  		JMP     CHECK_SYNC_TIME
 331  000E                              
 332  000E  2000     R                  CALL    _TKM_RESET
 333  000F  2000     R                  CALL    _LOAD_BALCAP
"File: BS83B08A_CTOUCH_WATER_V501.asm  Assembler  Version 2.98      Page 7

 334  0010              
 335  0010                              ;-IF TIMER INT DISAPPEAR
 336  0010  388F                        SNZ     TB0E
 337  0011  2000     R                  CALL    TBASE_INITIAL
 338  0012              
 339  0012                              ;------------------------
 340  0012              CHECK_SYNC_TIME:;-CHECK SYNC. TIME 10.49MS
 341  0012                              ;------------------------
 342  0012                              ;-CHECK 10.49MS
 343  0012                              ;-CHECK 15.61MS
 344  0012  0FC3                        MOV     A,100H-61;91;61    ;FOR 12M
 345  0013  3E8C                        SZ      CTRL.5
 346  0014  3E0C                        SZ      CTRL.4
 347  0015  0FD7                        MOV     A,100H-41;61;41       ;FOR 8M/16M    
 348  0016  036F                        ADD     A,_TKS_TIME_BASE
 349  0017  380A                        SNZ     C
 350  0018  0003                        RET
 351  0019  00EF                        MOV     _TKS_TIME_BASE,A
 352  001A              
 353  001A  5F3B        		CLR	WATER_TOUCH_COUNTER
 354  001B  2000     R                  CALL    _TKS_TIMER
 355  001C                              
 356  001C                              ;----------------
 357  001C                              ;-IF TKS ACTIVE -
 358  001C                              ;----------------
 359  001C  7882                        SNZ     _TKS_ACTIVEF
 360  001D  0003                        RET
 361  001E              
 362  001E                              ;-COUNT PROCESS ORDER                     
 363  001E  14FE                        INC     SAMPLE_TIMES
 364  001F  3E7E                        SZ      SAMPLE_TIMES.4
 365  0020  367E                        CLR     SAMPLE_TIMES.4
 366  0021              				
 367  0021  2000     R                  CALL    _TKS_FILTER
 368  0022              
 369  0022  2000     R                  CALL    _TKS_STATE_CHECK
 370  0023                             
 371  0023  2000     R                  CALL    _NORMAL_CALIBRATE 
 372  0024                             
 373  0024  2000     R                  CALL    _CHECK_KEY_TIMER
 374  0025              
 375  0025  2000     R                  CALL    _FORCE_CALIBRATE
 376  0026              
 377  0026  2000     R                  CALL    _RE_BALANCE             ;MUST BE IN LAST CALL
 378  0027              				
 379  0027              				;-- WATER FUNCTION --
 380  0027              				
 381  0027              				
 382  0027              ;                ;------------------------ 
 383  0027              ;        ifdef   CStestMode
 384  0027              ;                ;------------
 385  0027              ;                ;-FOR CS TEST
 386  0027              ;                ;------------
 387  0027              ;
 388  0027              ;          ;;    ;-TEST
 389  0027              ;          ;;    CLR     PAC.1
 390  0027              ;          ;;    SNZ     KEY_STATE_BUF.CS_INTERFEREF
 391  0027              ;          ;;    CLR     PA.1
 392  0027              ;          ;;    SZ      KEY_STATE_BUF.CS_INTERFEREF
 393  0027              ;          ;;    SET     PA.1
"File: BS83B08A_CTOUCH_WATER_V501.asm  Assembler  Version 2.98      Page 8

 394  0027              ;
 395  0027              ;
 396  0027              ;                ;-TEST 1~4                              
 397  0027              ;                CLR     _DATA_BUF[0]                    
 398  0027              ;TEST_LOOP:                          
 399  0027              ;                MOV     A,_DATA_BUF[0]                  
 400  0027              ;                MOV     CHANNEL_INDEX,A
 401  0027              ;             ;  CALL    GET_M3_HL_MPX
 402  0027              ;                CALL    GET_HL_DIFF_MAX_MPX
 403  0027              ;                MOV     A,IAR1
 404  0027              ;                MOV     _DATA_BUF[2],A
 405  0027              ;
 406  0027              ;                CALL    GET_M11_LIMIT_MPX
 407  0027              ;                INC     MP1
 408  0027              ;                INC     MP1
 409  0027              ;                INC     MP1
 410  0027              ;                MOV     A,IAR1
 411  0027              ;                MOV     _DATA_BUF[3],A
 412  0027              ;                
 413  0027              ;                MOV     A,_DATA_BUF[0]
 414  0027              ;                ADD     A,4
 415  0027              ;                MOV     CHANNEL_INDEX,A
 416  0027              ;                CALL    GET_KEY_REF_MPX ;REF
 417  0027              ;                MOV     A,_DATA_BUF[2]
 418  0027              ;                MOV     IAR1,A          ;SAVE 3M HL DIFF
 419  0027              ;
 420  0027              ;                INC     MP1             ;FREQ
 421  0027              ;                MOV     A,_DATA_BUF[3]
 422  0027              ;                MOV     IAR1,A          ;SAVE 11M HL DIFF
 423  0027              ;               
 424  0027              ;                                                        
 425  0027              ;                INC     _DATA_BUF[0]                    
 426  0027              ;                MOV     A,_DATA_BUF[0]                  
 427  0027              ;                SUB     A,4                             
 428  0027              ;                SNZ     C                               
 429  0027              ;                JMP     TEST_LOOP                       
 430  0027              ;        endif   ;------------------------               
 431  0027                                                                      
 432  0027  0003                        RET                                     
 433  0028              
 434  0028              
 435  0028              
 436  0028              
 437  0028              
 438  0028              ;;;***********************************************************   
 439  0028              ;;;*SUB. NAME:                                               *   
 440  0028              ;;;*INPUT    :                                               *   
 441  0028              ;;;*OUTPUT   :                                               *   
 442  0028              ;;;*USED REG.:                                               *   
 443  0028              ;;;*FUNCTION :                                               *   
 444  0028              ;;;***********************************************************   
 445  0028              _BS83B08A_CTOUCH_WATER_V501_INITIAL:
 446  0028              _LIBRARY_RESET:
 447  0028              
 448  0028                              ;-BALANCE INITIAL
 449  0028  1F7D                        CLR     BALANCE_BUF[1]
 450  0029  0F80                        MOV     A,10000000B
 451  002A  00FC                        MOV     BALANCE_BUF[0],A
 452  002B                              ;-SET BALANCE CAP
 453  002B  1F7B                        CLR     CHANNEL_INDEX
"File: BS83B08A_CTOUCH_WATER_V501.asm  Assembler  Version 2.98      Page 9

 454  002C                              ;--
 455  002C  2000     R                  CALL    GET_BALANCE_CAP_MPX
 456  002D  077C                        MOV     A,BALANCE_BUF[0]
 457  002E  0082                        MOV     IAR1,A
 458  002F  1483                        INC     MP1
 459  0030  0082                        MOV     IAR1,A
 460  0031  2000     R                  CALL	CHECK_AMOUNT                           
 461  0032  380A                        SNZ     C
 462  0033  2800     R                  JMP     $-7
 463  0034               
 464  0034                              ;-VARIES INITIAL
 465  0034  7482                        CLR     _TKS_ACTIVEF
 466  0035  1F7D                        CLR     UNBALANCE_TIMER
 467  0036  1FF9                        SET     KEY_DBCE
 468  0037              				
 469  0037  5F00        		CLR     TKS_TIMERB
 470  0038  1F7F        		CLR     TKS_TIMER
 471  0039              				
 472  0039                              ;-TKM INITIAL
 473  0039  2000     R                  CALL    _TKM_RESET
 474  003A  2000     R                  CALL    _LOAD_BALCAP
 475  003B  310E                        SET     TKME
 476  003C              
 477  003C  7002                        SET     _FORCE_CALIBRATEF
 478  003D  2000     R                  CALL    _FORCE_CALIBRATE
 479  003E                              
 480  003E                              ;------------------                             
 481  003E              TBASE_INITIAL:  ;-TIME BASE INITIAL                             
 482  003E                              ;------------------
 483  003E  0F20                        MOV     A,00100000B     ;256 us BASE ON 16MHZ
 484  003F                            ;;MOV     A,00010000B     ;128 us BASE ON 16MHZ
 485  003F  3A8C                        SNZ     CTRL.5
 486  0040  3A0C                        SNZ     CTRL.4
 487  0041                            ;;MOV     A,00000000B     ;128 us BASE ON 8MHZ ; 85.S uS BASE ON 12MHZ
 488  0041  0F10                        MOV     A,00010000B     ;256 us BASE ON 8MHZ ; 170.6 uS BASE ON 12MHZ
 489  0042  009B                        MOV     TBC,A                                   
 490  0043  308F                        SET     TBE 
 491  0044  300E                        SET     EMI
 492  0045  0003                        RET                                             
 493  0046                                               
 494  0046              
 495  0046              
 496  0046              ;;***********************************************************   
 497  0046              ;;*SUB. NAME:                                               *   
 498  0046              ;;*INPUT    :                                               *   
 499  0046              ;;*OUTPUT   :                                               *   
 500  0046              ;;*USED REG.:                                               *   
 501  0046              ;;*FUNCTION :                                               *   
 502  0046              ;;***********************************************************   
 503  0046              #define         SampleA                 1024
 504  0046              #define         SampleB                 2048
 505  0046              
 506  0046              #define         SampleWindowLimitA      (SampleA-BalanceCentralPoint)
 507  0046              #define         SampleWindowLimitB      (SampleB-BalanceCentralPoint)  
 508  0046              
 509  0046              #define         TKTMRA                  (SampleA/64)
 510  0046              #define         TKTMRB                  (SampleB/64)
 511  0046              
 512  0046              _TKM_RESET: 
 513  0046              
"File: BS83B08A_CTOUCH_WATER_V501.asm  Assembler  Version 2.98      Page 10

 514  0046              		;-SET MAIN FREQ
 515  0046  0F01        		MOV     A,00000001B             ;3MHZ
 516  0047  00C7        		MOV     TKC1,A
 517  0048              		;--
 518  0048  1F44        		CLR     TKC0
 519  0049              		
 520  0049              		;-SET SAMPLING LENGTH (PRE X 2)
 521  0049  0FF0        		MOV     A,256-TKTMRA;28;32;24;20;16          ;SET 1024+1024             ;SET 1024 COUNT             
 522  004A  3C61        		SZ      _GLOBE_VARIES[TKS_OPTIONB].SENS_LEVEL
 523  004B  0FE0        		MOV     A,256-TKTMRB;44;36;32          ;SET 2048+1024             ;SET 2048 COUNT             
 524  004C  00C3        		MOV     TKTMR,A
 525  004D              		
 526  004D              		
 527  004D              		;-INITIAL TKMXC0
 528  004D  0F27        		MOV     A,00100111B     ;DEN/FEN
 529  004E  3DE2        		SZ      _GLOBE_VARIES[TKS_OPTIONC].AUTO_RS              
 530  004F  0F2F        		MOV     A,00101111B     ;DEN/FEN/RSEN
 531  0050  00CC        		MOV     TKM0C0,A        ;KEY 4         
 532  0051              		
 533  0051              		;-- BS83B08A touch setting---
 534  0051  0774        		MOV     A,_KEY_IO_SEL[0]
 535  0052  0E0F        		AND     A,00001111B
 536  0053  00CD        		MOV     TKM0C1,A
 537  0054              		
 538  0054              
 539  0054  0003                        RET
 540  0055              
 541  0055              
 542  0055              
 543  0055              
 544  0055                 
 545  0055              ;;***********************************************************   
 546  0055              ;;*SUB. NAME:                                               *   
 547  0055              ;;*INPUT    :                                               *   
 548  0055              ;;*OUTPUT   :                                               *   
 549  0055              ;;*USED REG.:                                               *   
 550  0055              ;;*FUNCTION :                                               *   
 551  0055              ;;***********************************************************
 552  0055              _TKS_SAMPLING_INT:
 553  0055                              ;-PUSH
 554  0055  00F0                        MOV     TKS_STACK[0],A
 555  0056  070A                        MOV     A,STATUS
 556  0057  00F1                        MOV     TKS_STACK[1],A
 557  0058  0703                        MOV     A,MP1
 558  0059  00F2                        MOV     TKS_STACK[2],A
 559  005A  0704                        MOV     A,BP
 560  005B  00F3                        MOV     TKS_STACK[3],A
 561  005C              
 562  005C                              ;-SET SAMPLE COUNT
 563  005C  0F03                        MOV     A,HIGH SampleWindowLimitA
 564  005D  3C61                        SZ      _GLOBE_VARIES[TKS_OPTIONB].SENS_LEVEL
 565  005E  0F07                        MOV     A,HIGH SampleWindowLimitB
 566  005F  0083                        MOV     MP1,A           ;TEMP USE MP1 AS BUFFER
 567  0060                              ;--
 568  0060  0F80                        MOV     A,LOW SampleWindowLimitA
 569  0061  3C61                        SZ      _GLOBE_VARIES[TKS_OPTIONB].SENS_LEVEL
 570  0062  0F80                        MOV     A,LOW SampleWindowLimitB
 571  0063  00F6                        MOV     TKM_BUF[0],A
 572  0064                              
 573  0064                              ;-READ TKM0 COUNT
"File: BS83B08A_CTOUCH_WATER_V501.asm  Assembler  Version 2.98      Page 11

 574  0064  0748                        MOV     A,TKM016DL     
 575  0065  02F6                        SUBM    A,TKM_BUF[0]
 576  0066  0749                        MOV     A,TKM016DH     
 577  0067  1203                        SBC     A,MP1
 578  0068  1085                        SZ      ACC
 579  0069  1FF6                        SET     TKM_BUF[0]
 580  006A  380A                        SNZ     C
 581  006B  1F76                        CLR     TKM_BUF[0]
 582  006C              				
 583  006C              
 584  006C                              ;-GET KEY_LIMIT MP & BP
 585  006C  114C                        SWAPA   TKM0C0          ;X4
 586  006D  0E0C                        AND     A,00001100B
 587  006E  0083                        MOV     MP1,A
 588  006F  0F9B                        MOV     A,OFFSET _M3_LIMIT
 589  0070  3CC7                        SZ      TKC1.1
 590  0071  0FAB                        MOV     A,OFFSET _M11_LIMIT
 591  0072  0383                        ADDM    A,MP1           ;MAXA
 592  0073                              ;--
 593  0073  0F00     R                  MOV     A,BANK _M3_LIMIT
 594  0074  3CC7                        SZ      TKC1.1
 595  0075  0F00     R                  MOV     A,BANK _M11_LIMIT
 596  0076  0084                        MOV     BP,A
 597  0077                              ;--
 598  0077              
 599  0077                              ;-IF TKS READY
 600  0077  7C82                        SZ      _TKS_ACTIVEF
 601  0078  2800     R                  JMP     SORTING_LIMIT
 602  0079              				
 603  0079                              ;-----------------
 604  0079                              ;-SUM TKMx COUNTS-
 605  0079                              ;-----------------
 606  0079                              ;-SUM TKM0 COUNTS
 607  0079  0776                        MOV     A,TKM_BUF[0]
 608  007A  0382                        ADDM    A,IAR1
 609  007B  1483                        INC     MP1             ;MAXB
 610  007C  1F05                        CLR     ACC
 611  007D  1382                        ADCM    A,IAR1
 612  007E                              ;------------------------
 613  007E              
 614  007E  2800     R                  JMP     SAMPLING_NEXT           
 615  007F              
 616  007F                              ;------------------------
 617  007F              SORTING_LIMIT:  ;-SORT M3/M11 LIMIT     -
 618  007F                              ;------------------------
 619  007F                              ;-SORT TKM0 LIMIT
 620  007F                              ;-MAXA
 621  007F  0776                        MOV     A,TKM_BUF[0]
 622  0080  0202                        SUB     A,IAR1
 623  0081  3C0A                        SZ      C
 624  0082  0382                        ADDM    A,IAR1
 625  0083                              ;-MAXB
 626  0083  1483                        INC     MP1
 627  0084  0776                        MOV     A,TKM_BUF[0]
 628  0085  0202                        SUB     A,IAR1
 629  0086  3C0A                        SZ      C
 630  0087  0382                        ADDM    A,IAR1
 631  0088                              ;-MINA
 632  0088  1483                        INC     MP1
 633  0089  0776                        MOV     A,TKM_BUF[0]
"File: BS83B08A_CTOUCH_WATER_V501.asm  Assembler  Version 2.98      Page 12

 634  008A  0202                        SUB     A,IAR1
 635  008B  380A                        SNZ     C
 636  008C  0382                        ADDM    A,IAR1
 637  008D                              ;------------------------
 638  008D              				
 639  008D              
 640  008D              SAMPLING_NEXT:  ;-SAMPLING NEXT KEY
 641  008D                              ;-SCAN TYPEA
 642  008D  1F44                        CLR     TKC0
 643  008E  0F40                        MOV     A,01000000B
 644  008F  03CC                        ADDM    A,TKM0C0
 645  0090                 if KeyAmount == 4
 646  0090  380A                        SNZ     C
 647  0091  2800     R                  JMP     _LOAD_BALCAP
 648  0092                 endif
 649  0092                 if KeyAmount == 2
 650  0092                 				snz		TKM0C0.7
 651  0092                              JMP 	_LOAD_BALCAP
 652  0092                 				clr		TKM0C0.7
 653  0092                 endif     
 654  0092                 if KeyAmount == 3
 655  0092                 				sz	TKM0C0.6
 656  0092                 				snz	TKM0C0.7
 657  0092                              JMP _LOAD_BALCAP
 658  0092                              clr	TKM0C0.6
 659  0092                 				clr	TKM0C0.7
 660  0092                 endif      
 661  0092                 if KeyAmount == 1
 662  0092                              clr	TKM0C0.6
 663  0092                 				clr	TKM0C0.7
 664  0092                 endif      
 665  0092                              ;-CHANGE TO 7M OR 11M
 666  0092  0F02                        MOV     A,00000010B     ;11M
 667  0093  3E62                        SZ      _GLOBE_VARIES[TKS_OPTIONC].CS_PROTECT           
 668  0094  0F03                        MOV     A,00000011B     ;7M
 669  0095  04C7                        XORM    A,TKC1
 670  0096  38C7                        SNZ     TKC1.1
 671  0097  2800     R                  JMP     END_SAMPLING_INT
 672  0098              
 673  0098              
 674  0098                              ;------------------------ 
 675  0098              _LOAD_BALCAP:   ;-LOAD BALANCE CAP. VALUE
 676  0098                              ;------------------------
 677  0098                              ;-TURN ON KEY/REF. OSC.
 678  0098  0F30                        MOV     A,00110000B
 679  0099  05CD                        ORM     A,TKM0C1
 680  009A                              ;-LOAD BALANCE CAP.
 681  009A  0F00     R                  MOV     A,BANK _KEY_REF    
 682  009B  0084                        MOV     BP,A
 683  009C  114C                        SWAPA   TKM0C0
 684  009D  0E0C                        AND     A,00001100B     ;X4
 685  009E  0B8D                        ADD     A,OFFSET _BALANCE_CAP3M
 686  009F  3CC7                        SZ      TKC1.1
 687  00A0  1485                        INC     ACC
 688  00A1  0083                        MOV     MP1,A
 689  00A2                              ;-25P 256 STEP
 690  00A2  340A                        CLR     C
 691  00A3  1A02                        RLCA    IAR1
 692  00A4  00CA                        MOV     TKM0ROL,A
 693  00A5  1F4B                        CLR     TKM0ROH
"File: BS83B08A_CTOUCH_WATER_V501.asm  Assembler  Version 2.98      Page 13

 694  00A6  1ACB                        RLC     TKM0ROH
 695  00A7                              ;-50P 256 STEP
 696  00A7  340A                        CLR     C
 697  00A8  1ACA                        RLC     TKM0ROL
 698  00A9  1ACB                        RLC     TKM0ROH
 699  00AA              
 700  00AA              END_SAMPLING_INT:;-POP 
 701  00AA  0773                        MOV     A,TKS_STACK[3]
 702  00AB  0084                        MOV     BP,A
 703  00AC  0772                        MOV     A,TKS_STACK[2]
 704  00AD  0083                        MOV     MP1,A
 705  00AE  0771                        MOV     A,TKS_STACK[1]
 706  00AF  008A                        MOV     STATUS,A
 707  00B0  0770                        MOV     A,TKS_STACK[0]
 708  00B1                              ;-IF END SAMPLING (REF. OCS. OFF)
 709  00B1  3A4D                        SNZ     TKM0C1.4
 710  00B2  0004                        RETI
 711  00B3                              ;-RE-START SAMPLING
 712  00B3  340E                        CLR     EMI
 713  00B4  32C4                        SET     TKST
 714  00B5  0004                        RETI
 715  00B6              
 716  00B6              
 717  00B6              
 718  00B6              
 719  00B6                 
 720  00B6              ;;***********************************************************   
 721  00B6              ;;*SUB. NAME:                                               *   
 722  00B6              ;;*INPUT    :                                               *   
 723  00B6              ;;*OUTPUT   :                                               *   
 724  00B6              ;;*USED REG.:                                               *   
 725  00B6              ;;*FUNCTION :                                               *   
 726  00B6              ;;***********************************************************
 727  00B6              _TKS_FILTER:
 728  00B6                            ;;;-TEST
 729  00B6                            ;;MOV     A,000000010B
 730  00B6                            ;;XORM    A,PA
 731  00B6              
 732  00B6  1F68                        CLR     _DATA_BUF[1]
 733  00B7  1F7B                        CLR     CHANNEL_INDEX
 734  00B8                              ;-------------
 735  00B8              FILTER_LOOP:    ;-FILTER LOOP
 736  00B8                              ;-------------
 737  00B8                              
 738  00B8                              ;-GET KEY STATUS
 739  00B8  2000     R                  CALL    GET_KEY_STATUS_MPX
 740  00B9  0702                        MOV     A,IAR1
 741  00BA  00E7                        MOV     _DATA_BUF[0],A
 742  00BB                              
 743  00BB                              ;----------------
 744  00BB                              ;-GET 11M LIMIT 
 745  00BB                              ;----------------
 746  00BB  2000     R                  CALL    GET_M11_LIMIT_MPX
 747  00BC                              ;-GET MAX               ;11M MAXA
 748  00BC  3C7E                        SZ      SAMPLE_TIMES.0      
 749  00BD  1483                        INC     MP1             ;11M MAXB
 750  00BE  0702                        MOV     A,IAR1
 751  00BF  1F02                        CLR     IAR1            ;RERET MAX TO 0
 752  00C0  00EE                        MOV     _DATA_BUF[7],A  ;GET 11M MAX
 753  00C1                              ;-GET H/L DIFFERENT
"File: BS83B08A_CTOUCH_WATER_V501.asm  Assembler  Version 2.98      Page 14

 754  00C1  387E                        SNZ     SAMPLE_TIMES.0
 755  00C2  2800     R                  JMP     $+7   
 756  00C3  1483                        INC     MP1
 757  00C4  0202                        SUB     A,IAR1
 758  00C5  1F82                        SET     IAR1
 759  00C6  380A                        SNZ     C
 760  00C7  1F05                        CLR     ACC
 761  00C8  00EC                        MOV     _DATA_BUF[5],A
 762  00C9              				
 763  00C9                              ;----------------
 764  00C9                              ;-GET 3M LIMIT
 765  00C9                              ;----------------
 766  00C9  2000     R                  CALL    GET_M3_LIMIT_MPX
 767  00CA                              ;-GET MAX               ;3M MAXA
 768  00CA  3C7E                        SZ      SAMPLE_TIMES.0      
 769  00CB  1483                        INC     MP1             ;3M MAXB
 770  00CC  0702                        MOV     A,IAR1
 771  00CD  1F02                        CLR     IAR1
 772  00CE  00ED                        MOV     _DATA_BUF[6],A  ;GET 3M MAX
 773  00CF                              ;-GET H/L DIFFERENT
 774  00CF  387E                        SNZ     SAMPLE_TIMES.0
 775  00D0  2800     R                  JMP     CHECK_BAL_POINT  
 776  00D1  1483                        INC     MP1
 777  00D2  0202                        SUB     A,IAR1          ;3M H-L
 778  00D3  1F82                        SET     IAR1
 779  00D4  380A                        SNZ     C
 780  00D5  1F05                        CLR     ACC
 781  00D6              				
 782  00D6                              ;-GET 3M/11 HL DIFF MAX
 783  00D6  026C                        SUB     A,_DATA_BUF[5]  ;COMPARE M3/M11 HL DIFF.
 784  00D7  3C0A                        SZ      C
 785  00D8  03EC                        ADDM    A,_DATA_BUF[5]  ;SWAP
 786  00D9                              ;-HL_DIFF_MAX IIR
 787  00D9  1483                        INC     MP1             ;HL_DIFF_MAX
 788  00DA  076C                        MOV     A,_DATA_BUF[5]
 789  00DB  0202                        SUB     A,IAR1
 790  00DC  380A                        SNZ     C
 791  00DD  2800     R                  JMP     $+5
 792  00DE                              ;1/2 IIR RISING
 793  00DE  076C                        MOV     A,_DATA_BUF[5]
 794  00DF  0382                        ADDM    A,IAR1
 795  00E0  1B82                        RRC     IAR1
 796  00E1  2800     R                  JMP     $+5
 797  00E2                              ;-1/16 IIR FALLING
 798  00E2  1185                        SWAP    ACC               
 799  00E3  0E0F                        AND     A,00001111B
 800  00E4  0DF0                        OR      A,11110000B
 801  00E5  0382                        ADDM    A,IAR1
 802  00E6                              
 803  00E6              
 804  00E6                              ;-CHECK CS INTERFERE
 805  00E6                            ;;;-IF KEY PRESSED NO CHECK CS INTERFERE
 806  00E6                            ;;SZ      _DATA_BUF[0].KEY_PRESSF
 807  00E6                            ;;JMP     CHECK_BAL_POINT
 808  00E6  2000     R                  CALL    GET_KEY_THR_MP0
 809  00E7  340A                        CLR     C
 810  00E8  1B02                        RRCA    IAR1            ;1/2 HL_DIFF_MAX
 811  00E9                              ;--
 812  00E9  0200                        SUB     A,IAR0
 813  00EA  35E7                        CLR     _DATA_BUF[0].CS_INTERFEREF
"File: BS83B08A_CTOUCH_WATER_V501.asm  Assembler  Version 2.98      Page 15

 814  00EB  3C0A                        SZ      C
 815  00EC  31E7                        SET     _DATA_BUF[0].CS_INTERFEREF
 816  00ED              
 817  00ED              
 818  00ED              
 819  00ED                              ;------------------------
 820  00ED              CHECK_BAL_POINT:;-CHECK IF UNBALANCE   --
 821  00ED                              ;------------------------
 822  00ED                              ;-CHECK 3M
 823  00ED  2000     R                  CALL    GET_BALANCE_CAP3M_MPX
 824  00EE  076D                        MOV     A,_DATA_BUF[6]
 825  00EF  2000     R                  CALL    CHECK_UNBALANCE         ;USE _DATA_BUF[1]
 826  00F0                              ;-CHECK 11M
 827  00F0  1483                        INC     MP1
 828  00F1  076E                        MOV     A,_DATA_BUF[7]
 829  00F2  380A                        SNZ     C
 830  00F3  2000     R                  CALL    CHECK_UNBALANCE         ;USE _DATA_BUF[1]
 831  00F4  1BE8                        RRC     _DATA_BUF[1]
 832  00F5                            ;;;-TEST
 833  00F5                            ;;CALL    GET_HL_DIFF_MAX_MPX
 834  00F5                            ;;MOV     A,_DATA_BUF[7]
 835  00F5                            ;;MOV     IAR1,A                  ;11M H                
 836  00F5              
 837  00F5                              ;----------------
 838  00F5                              ;-GET FREQ ------
 839  00F5                              ;----------------  
 840  00F5                              ;-GET LOWER MAX. COUNT
 841  00F5  076E                        MOV     A,_DATA_BUF[7]
 842  00F6  026D                        SUB     A,_DATA_BUF[6]
 843  00F7  380A                        SNZ     C
 844  00F8  03ED                        ADDM    A,_DATA_BUF[6]  ;SWAP _BUF[6];_BUF[7]
 845  00F9              
 846  00F9              FREQ_IIR_FILTER:;-FREQ IIR FILTER
 847  00F9  2000     R                  CALL    GET_KEY_FREQ_MPX
 848  00FA  076D                        MOV     A,_DATA_BUF[6]
 849  00FB  0202                        SUB     A,IAR1
 850  00FC  00ED                        MOV     _DATA_BUF[6],A
 851  00FD                              ;-RECORD C FLAG
 852  00FD  1F6C                        CLR     _DATA_BUF[5]
 853  00FE  380A                        SNZ     C
 854  00FF  1FEC                        SET     _DATA_BUF[5]
 855  0100                              ;--
 856  0100  380A                        SNZ     C
 857  0101  0185                        CPL     ACC
 858  0102                            ;;SZ      _GLOBE_VARIES[TKS_OPTIONB].SENS_LEVEL
 859  0102                            ;;SUB     A,NoiseLevel/2  ;SWING UNDER +- 1 NoiseLevel
 860  0102                            ;;SNZ     _GLOBE_VARIES[TKS_OPTIONB].SENS_LEVEL
 861  0102  0A08                        SUB     A,NoiseLevel/2  ;SWING UNDER +- 1/2 NoiseLevel
 862  0103  3C0A                        SZ      C
 863  0104  2800     R                  JMP     $+6
 864  0105                              ;-PRE-SET FILTER RECORD TO 1/16
 865  0105  3467                        CLR     _DATA_BUF[0].IIR_LOOP0
 866  0106  34E7                        CLR     _DATA_BUF[0].IIR_LOOP1
 867  0107  10ED                        SZ      _DATA_BUF[6]
 868  0108  2800     R                  JMP     $+2
 869  0109  2800     R                  JMP     SAVE_FILTER_REC
 870  010A              
 871  010A                              ;-GET IIR LOOP
 872  010A  0167                        CPLA    _DATA_BUF[0]
 873  010B  0E03                        AND     A,00000011B
"File: BS83B08A_CTOUCH_WATER_V501.asm  Assembler  Version 2.98      Page 16

 874  010C  1485                        INC     ACC
 875  010D                            ;;SNZ     _GLOBE_VARIES[TKS_OPTIONB].SENS_LEVEL
 876  010D  3DE7                        SZ      _DATA_BUF[0].CS_INTERFEREF
 877  010E  1485                        INC     ACC                             ;MORE IIR WHEN CS INTERFERE/HIGH SENS_LEVEL
 878  010F                              ;-IIR 1/16 ; 1/8 ; 1/4 ; 1/2
 879  010F                            ;;CLR     _DATA_BUF[7]
 880  010F                              ;--
 881  010F  1BEC                        RRC     _DATA_BUF[5]
 882  0110  1BED                        RRC     _DATA_BUF[6]
 883  0111  1BEE                        RRC     _DATA_BUF[7]    ;SAVE C FLAG
 884  0112  1785                        SDZ     ACC                 
 885  0113  2800     R                  JMP     $-4;3
 886  0114              
 887  0114              
 888  0114                              ;-CHECK IIR MIN. VALUE
 889  0114  386C                        SNZ     _DATA_BUF[5].0
 890  0115  10ED                        SZ      _DATA_BUF[6]
 891  0116  2800     R                  JMP     $+4
 892  0117  3BEE                        SNZ     _DATA_BUF[7].7
 893  0118  3F6E                        SZ      _DATA_BUF[7].6
 894  0119  14ED                        INC     _DATA_BUF[6]
 895  011A                              ;--
 896  011A  076D                        MOV     A,_DATA_BUF[6]
 897  011B  0382                        ADDM    A,IAR1
 898  011C              
 899  011C                              ;-FILTER LOOP + (-1)
 900  011C  3C67                        SZ      _DATA_BUF[0].IIR_LOOP0
 901  011D  38E7                        SNZ     _DATA_BUF[0].IIR_LOOP1
 902  011E  14E7                        INC     _DATA_BUF[0]
 903  011F              SAVE_FILTER_REC:;-SAVE FILTER LOOP/DIR
 904  011F  2000     R                  CALL    GET_KEY_STATUS_MPX
 905  0120  0767                        MOV     A,_DATA_BUF[0]
 906  0121  0082                        MOV     IAR1,A
 907  0122              
 908  0122              
 909  0122              
 910  0122              END_TKS_FILTER: ;-END OF FILTER
 911  0122  2000     R                  CALL    CHECK_AMOUNT
 912  0123  380A                        SNZ     C
 913  0124  2800     R                  JMP     FILTER_LOOP  
 914  0125                              ;-IF UNBALANCE
 915  0125  37FE                        CLR     UNBALANCEF
 916  0126                              
 917  0126              ;***water check point
 918  0126                              ; CLR		_DATA_BUF[0]
 919  0126                              ; SZ		_KEY_IO_SEL[0].7
 920  0126                         		; JMP		$+8
 921  0126                              ; SWAPA	_KEY_IO_SEL[0]
 922  0126                              ; AND		A,00000011B
 923  0126                              ; INC		ACC
 924  0126                              ; SET		C
 925  0126                              ; RLC		_DATA_BUF[0]
 926  0126                              ; SDZ		ACC
 927  0126                              ; JMP		$-2                
 928  0126                              ; CPL		_DATA_BUF[0]
 929  0126                              
 930  0126                              ; SWAPA   _DATA_BUF[1]
 931  0126                              ; AND     A,_KEY_IO_SEL[0]
 932  0126                              ; AND		A,_DATA_BUF[0]
 933  0126                              ; AND		A,00001111B
"File: BS83B08A_CTOUCH_WATER_V501.asm  Assembler  Version 2.98      Page 17

 934  0126                              ; SNZ     Z
 935  0126                              ; SET     UNBALANCEF
 936  0126                              
 937  0126  1174                        SWAPA   _KEY_IO_SEL[0]
 938  0127  0185                        CPL     ACC
 939  0128  0674                        AND     A,_KEY_IO_SEL[0]
 940  0129  0E0F                        AND     A,00001111B
 941  012A  00E7                        MOV     _DATA_BUF[0],A
 942  012B                              
 943  012B  1168                        SWAPA   _DATA_BUF[1]
 944  012C                        if    KeyAmount == 1  
 945  012C                              RR      ACC
 946  012C                              RR      ACC
 947  012C                              RR      ACC
 948  012C                        elseif KeyAmount == 2
 949  012C                              RR      ACC
 950  012C                              RR      ACC
 951  012C                        elseif KeyAmount == 3
 952  012C                              RR      ACC
 953  012C                        endif
 954  012C                              ;AND     A,00001111B
 955  012C                              ;AND     A,_KEY_IO_SEL[0]
 956  012C  0667                        AND     A,_DATA_BUF[0]
 957  012D              ;==                
 958  012D  390A                        SNZ     Z
 959  012E  33FE                        SET     UNBALANCEF
 960  012F  0003                        RET
 961  0130              
 962  0130              
 963  0130              
 964  0130              ;;***********************************************************   
 965  0130              ;;***********************************************************   
 966  0130              ;;***********************************************************
 967  0130                              #define LowUnBalanceOffset      18
 968  0130                              #define HighUnBalanceOffset     26
 969  0130              CHECK_UNBALANCE:
 970  0130              
 971  0130              
 972  0130                              ;-IF CAP = 0 WHEN OVER Centralpoint
 973  0130  3861                        SNZ     _GLOBE_VARIES[TKS_OPTIONB].SENS_LEVEL
 974  0131  0A92                        SUB     A,BalanceCentralPoint+LowUnBalanceOffset
 975  0132  3C61                        SZ      _GLOBE_VARIES[TKS_OPTIONB].SENS_LEVEL
 976  0133  0A9A                        SUB     A,BalanceCentralPoint+HighUnBalanceOffset
 977  0134              
 978  0134  380A                        SNZ     C
 979  0135  2800     R                  JMP     UNDER_CENTRAL
 980  0136  1082                        SZ      IAR1
 981  0137  0003                        RET
 982  0138  340A                        CLR     C
 983  0139  0003                        RET
 984  013A              
 985  013A              UNDER_CENTRAL:
 986  013A  3861                        SNZ     _GLOBE_VARIES[TKS_OPTIONB].SENS_LEVEL
 987  013B  0B25                        ADD     A,(BalanceCentralPoint+LowUnBalanceOffset - (BalanceCentralPoint-LowUnBalanceOffset-1))
 988  013C  3C61                        SZ      _GLOBE_VARIES[TKS_OPTIONB].SENS_LEVEL
 989  013D  0B35                        ADD     A,(BalanceCentralPoint+HighUnBalanceOffset - (BalanceCentralPoint-HighUnBalanceOffset-1))
 990  013E              
 991  013E  1602                        SIZA    IAR1
 992  013F  3C0A                        SZ      C
 993  0140  2800     R                  JMP     $+3                
"File: BS83B08A_CTOUCH_WATER_V501.asm  Assembler  Version 2.98      Page 18

 994  0141  300A                        SET     C
 995  0142  0003                        RET
 996  0143                              ;--
 997  0143  340A                        CLR     C
 998  0144  0003                        RET
 999  0145                 
1000  0145              
1001  0145              
1002  0145                 
1003  0145              ;;***********************************************************   
1004  0145              ;;*SUB. NAME:                                               *   
1005  0145              ;;*INPUT    :                                               *   
1006  0145              ;;*OUTPUT   :                                               *   
1007  0145              ;;*USED REG.:                                               *   
1008  0145              ;;*FUNCTION :                                               *   
1009  0145              ;;***********************************************************
1010  0145              _CHECK_KEY_WAKEUP:
1011  0145              
1012  0145  0003                        RET
1013  0146              
1014  0146                 
1015  0146              ;;***********************************************************   
1016  0146              ;;*SUB. NAME:POWER ON CALIBRATE                             *   
1017  0146              ;;*INPUT    :                                               *   
1018  0146              ;;*OUTPUT   :ACC FFH= NOT BALANCE                           *   
1019  0146              ;;*USED REG.:                                               *   
1020  0146              ;;*FUNCTION :                                               *   
1021  0146              ;;***********************************************************   
1022  0146              _PON_CALIBRATE:
1023  0146                              ;-COUNT 16 TIMES FOR 16 AVG.
1024  0146  14FE                        INC     SAMPLE_TIMES
1025  0147  3A7E                        SNZ     SAMPLE_TIMES.4
1026  0148  0003                        RET
1027  0149  1F7E                        CLR     SAMPLE_TIMES
1028  014A              
1029  014A                            ;;;-DUMMY SAMPLE 2 CYCLE COUNTER
1030  014A                            ;;SNZ     BALANCE_BUF[1].1
1031  014A                            ;;INC     BALANCE_BUF[1]
1032  014A              				
1033  014A                          ;--20180430--
1034  014A  0774                    MOV     A,_KEY_IO_SEL[0]
1035  014B  0E0F                    AND		A,00001111B
1036  014C  00EB                    MOV     _DATA_BUF[4],A
1037  014D                          ;--
1038  014D                              
1039  014D  1F7B                        CLR     CHANNEL_INDEX
1040  014E                              ;------------------------
1041  014E              CAP_BAL_LOOP:   ;-CAP. BALANCE LOOP     -
1042  014E                              ;------------------------
1043  014E                              ;-GET 3M AVG.
1044  014E  2000     R                  CALL    GET_M3_LIMIT_MPX
1045  014F                              ;-DIV16 / CLR /PRE-SET M3 LIMIT
1046  014F  2000     R                  CALL    PON_DIV16_PRESET       
1047  0150  00E7                        MOV     _DATA_BUF[0],A      
1048  0151  00E8                        MOV     _DATA_BUF[1],A	;TONY DEF
1049  0152  1483                        INC     MP1
1050  0153  1F02                        CLR     IAR1            ;CLR H-L
1051  0154              				
1052  0154                              ;-GET 11M AVG.
1053  0154  2000     R                  CALL    GET_M11_LIMIT_MPX
"File: BS83B08A_CTOUCH_WATER_V501.asm  Assembler  Version 2.98      Page 19

1054  0155  2000     R                  CALL    PON_DIV16_PRESET
1055  0156  00E8                        MOV     _DATA_BUF[1],A
1056  0157                              
1057  0157                          ;--20180430--
1058  0157  1BEB                    RRC     _DATA_BUF[4]
1059  0158                          ;--
1060  0158  1BEE                    RRC     _DATA_BUF[7]
1061  0159  3BEE                    SNZ     _DATA_BUF[7].7
1062  015A  1FE7                    SET     _DATA_BUF[0]
1063  015B  3BEE                    SNZ     _DATA_BUF[7].7
1064  015C  1FE8                    SET     _DATA_BUF[1]
1065  015D                          ;--
1066  015D                              
1067  015D                              ;-IF DUMMY SAMPLE DONE 
1068  015D  3CFD                        SZ      BALANCE_BUF[1].1        ;DUMMY 2 CYCLE
1069  015E  2800     R                  JMP     CHK_BALANCE_TYPE
1070  015F                              ;--
1071  015F  2000     R                  CALL	CHECK_AMOUNT
1072  0160  380A                        SNZ     C
1073  0161  2800     R                  JMP     CAP_BAL_LOOP
1074  0162                              ;--
1075  0162  14FD                        INC     BALANCE_BUF[1]
1076  0163  0003                        RET
1077  0164              
1078  0164              
1079  0164              
1080  0164              
1081  0164              CHK_BALANCE_TYPE:;-CHECK BALANCE TYPE
1082  0164  3DFD                        SZ      BALANCE_BUF[1].3                        
1083  0165  2800     R                  JMP     BAL_APPROACH
1084  0166                              ;----------------------------                   
1085  0166                              ;-FAST BALANCE WITH BIT SHIFT                   
1086  0166                              ;---------------------------- 
1087  0166                                                
1088  0166                              ;-LOAD BALANCE CAP.
1089  0166  2000     R                  CALL    GET_BALANCE_CAP_MPX     ;3M BAL CAP
1090  0167                              ;-CHECK BALANCE POINT
1091  0167  0767                        MOV     A,_DATA_BUF[0]
1092  0168  2000     R                  CALL    PON_BIT_INVERT
1093  0169              				
1094  0169                              ;-LOAD BALANCE CAP.
1095  0169  1483                        INC     MP1             ;11M BAL CAP
1096  016A                              ;-CHECK BALANCE POINT
1097  016A  0768                        MOV     A,_DATA_BUF[1]
1098  016B  2000     R                  CALL    PON_BIT_INVERT
1099  016C              
1100  016C  2000     R                  CALL	CHECK_AMOUNT                           
1101  016D  380A                        SNZ     C
1102  016E  2800     R                  JMP     CAP_BAL_LOOP
1103  016F                               
1104  016F                              ;-SHIFT TO NEXT BIT       
1105  016F  340A                        CLR     C
1106  0170  1BFC                        RRC     BALANCE_BUF[0]
1107  0171  3C0A                        SZ      C
1108  0172  31FD                        SET     BALANCE_BUF[1].3
1109  0173  0003                        RET
1110  0174              
1111  0174              
1112  0174                              ;-----------------
1113  0174              BAL_APPROACH:   ;-BALANCE_APPROACH
"File: BS83B08A_CTOUCH_WATER_V501.asm  Assembler  Version 2.98      Page 20

1114  0174                              ;-----------------
1115  0174                              
1116  0174                              ;-LOAD PREVIOUS 3M
1117  0174  2000     R                  CALL    GET_KEY_REF_MPX       
1118  0175  0702                        MOV     A,IAR1
1119  0176  00E9                        MOV     _DATA_BUF[2],A
1120  0177                              ;-SAVE 3M
1121  0177  0767                        MOV     A,_DATA_BUF[0]
1122  0178                              
1123  0178                      ;--20180430--
1124  0178  3BEE                SNZ     _DATA_BUF[7].7
1125  0179  1F05                CLR     ACC
1126  017A                      ;--
1127  017A                      
1128  017A  0082                        MOV     IAR1,A
1129  017B                              ;-LOAD PREVIOUS 11M
1130  017B  1483                        INC     MP1                     ;FREQ
1131  017C  0702                        MOV     A,IAR1
1132  017D  00EA                        MOV     _DATA_BUF[3],A
1133  017E                              ;-SAVE 11M
1134  017E  0768                        MOV     A,_DATA_BUF[1]
1135  017F                      ;--20180430--
1136  017F  3BEE                SNZ     _DATA_BUF[7].7
1137  0180  1F05                CLR     ACC
1138  0181                      ;--
1139  0181  0082                        MOV     IAR1,A
1140  0182                              ;-LOAD BALANCE CAP.
1141  0182  2000     R                  CALL    GET_BALANCE_CAP_MPX     ;3M CAP
1142  0183              		
1143  0183  3F7D                        SZ      BALANCE_BUF[1].6
1144  0184  2800     R                  JMP     LAST_BALANCE
1145  0185                              ;--
1146  0185  2000     R                  CALL    PON_INC_OR_DEC_CAP
1147  0186              
1148  0186  1483                        INC     MP1                     ;11M CAP
1149  0187  0768                        MOV     A,_DATA_BUF[1]
1150  0188  00E7                        MOV     _DATA_BUF[0],A
1151  0189  2000     R                  CALL    PON_INC_OR_DEC_CAP
1152  018A                              
1153  018A  2000     R                  CALL	CHECK_AMOUNT                           
1154  018B  380A                        SNZ     C                                       
1155  018C  2800     R                  JMP     CAP_BAL_LOOP
1156  018D              
1157  018D                              ;--
1158  018D  0F10                        MOV     A,00010000B
1159  018E  03FD                        ADDM    A,BALANCE_BUF[1] 
1160  018F                              
1161  018F  0003                        RET         
1162  0190              
1163  0190              
1164  0190              LAST_BALANCE:   ;-LAST BALANCE
1165  0190                              ;-COMPARE CURRENT / LAST BASE ON Centralpoint
1166  0190                              ;-COMPARE 3M
1167  0190  2000     R                  CALL    PON_CMP_CURRENT_LAST
1168  0191                              ;-COMPARE 11M
1169  0191  1483                        INC     MP1                     ;11M
1170  0192  076A                        MOV     A,_DATA_BUF[3]          ;LAST
1171  0193  00E9                        MOV     _DATA_BUF[2],A
1172  0194  0768                        MOV     A,_DATA_BUF[1]          ;CURRENT
1173  0195  00E7                        MOV     _DATA_BUF[0],A
"File: BS83B08A_CTOUCH_WATER_V501.asm  Assembler  Version 2.98      Page 21

1174  0196  2000     R                  CALL    PON_CMP_CURRENT_LAST
1175  0197              
1176  0197              END_PON_BAL:    ;-END OF BALANCE 
1177  0197  2000     R                  CALL	CHECK_AMOUNT                           
1178  0198  380A                        SNZ     C                                       
1179  0199  2800     R                  JMP     CAP_BAL_LOOP                            
1180  019A              
1181  019A                              ;-BALANCE DONE                                 
1182  019A  7082                        SET     _TKS_ACTIVEF
1183  019B  7002                        SET     _FORCE_CALIBRATEF
1184  019C                              ;--
1185  019C  1F7C                        CLR     BALANCE_BUF[0]
1186  019D  1F7D                        CLR     BALANCE_BUF[1]
1187  019E  0003                        RET
1188  019F              
1189  019F              
1190  019F              ;;***********************************************
1191  019F              ;;***********************************************
1192  019F              ;;***********************************************
1193  019F              PON_DIV16_PRESET:
1194  019F  1102                        SWAPA   IAR1
1195  01A0  0E0F                        AND     A,00FH
1196  01A1  00E9                        MOV     _DATA_BUF[2],A
1197  01A2  1F02                        CLR     IAR1
1198  01A3                              ;--
1199  01A3  1483                        INC     MP1                   
1200  01A4  1102                        SWAPA   IAR1
1201  01A5  0EF0                        AND     A,0F0H
1202  01A6  0569                        OR      A,_DATA_BUF[2]
1203  01A7  1F02                        CLR     IAR1
1204  01A8              
1205  01A8                              ;-SET 3M/11M MIN TO 0FFH
1206  01A8  1483                        INC     MP1             ;SET LOW LIMIT = FF
1207  01A9  1F82                        SET     IAR1                               
1208  01AA                            ;;INC     MP1
1209  01AA                            ;;CLR     IAR1            ;CLR H-L
1210  01AA  0003                        RET
1211  01AB              
1212  01AB              ;;***********************************************
1213  01AB              ;;***********************************************
1214  01AB              ;;***********************************************
1215  01AB              PON_CMP_CURRENT_LAST:
1216  01AB                              ;-CURRENT SUB CENTRALPOINT
1217  01AB  0767                        MOV     A,_DATA_BUF[0]
1218  01AC  0A80                        SUB     A,BalanceCentralPoint
1219  01AD  380A                        SNZ     C
1220  01AE  0185                        CPL     ACC
1221  01AF                          ;--20180430--
1222  01AF                          ;;MOV     _DATA_BUF[4],A
1223  01AF  0087                    MOV     TBLP,A
1224  01B0                          ;--
1225  01B0              
1226  01B0                              ;-LAST SUB CENTRALPOINT
1227  01B0  0769                        MOV     A,_DATA_BUF[2]
1228  01B1  0A80                        SUB     A,BalanceCentralPoint
1229  01B2  380A                        SNZ     C                             
1230  01B3  0185                        CPL     ACC
1231  01B4                          ;--20180430--
1232  01B4                          ;;SUB     A,_DATA_BUF[4]
1233  01B4  0207                    SUB     A,TBLP
"File: BS83B08A_CTOUCH_WATER_V501.asm  Assembler  Version 2.98      Page 22

1234  01B5                          ;--
1235  01B5                              ;--
1236  01B5  3C0A                        SZ      C
1237  01B6  0003                        RET
1238  01B7              
1239  01B7              PON_INC_OR_DEC_CAP: ;---
1240  01B7  0767                        MOV     A,_DATA_BUF[0]
1241  01B8  0A80                        SUB     A,BalanceCentralPoint  
1242  01B9  380A                        SNZ     C
1243  01BA  2800     R                  JMP     $+4
1244  01BB  1082                        SZ      IAR1
1245  01BC  1582                        DEC     IAR1
1246  01BD  2800     R                  JMP     $+4
1247  01BE  1402                        INCA    IAR1
1248  01BF  1085                        SZ      ACC
1249  01C0  1482                        INC     IAR1
1250  01C1  0003                        RET
1251  01C2              
1252  01C2              ;;***********************************************
1253  01C2              ;;***********************************************
1254  01C2              ;;***********************************************
1255  01C2              PON_BIT_INVERT: ;--
1256  01C2  0A80                        SUB     A,BalanceCentralPoint
1257  01C3                              ;-INVERT CURRENT BIT  
1258  01C3  077C                        MOV     A,BALANCE_BUF[0]  
1259  01C4  3C0A                        SZ      C
1260  01C5  0482                        XORM    A,IAR1  
1261  01C6                              ;-LOAD NEXT BIT 
1262  01C6  340A                        CLR     C
1263  01C7  1B7C                        RRCA    BALANCE_BUF[0] 
1264  01C8  0582                        ORM     A,IAR1
1265  01C9  0003                        RET
1266  01CA              
1267  01CA              
1268  01CA              
1269  01CA              
1270  01CA              ;;***********************************************************   
1271  01CA              ;;*SUB. NAME:RE_BALANCE                                     *   
1272  01CA              ;;*INPUT    :                                               *   
1273  01CA              ;;*OUTPUT   :                                               *   
1274  01CA              ;;*USED REG.:                                               *   
1275  01CA              ;;*FUNCTION :                                               *   
1276  01CA              ;;***********************************************************
1277  01CA              _RE_BALANCE:
1278  01CA                              ;-IF ANY KEY FUNCTION WILL ACTIVE
1279  01CA  3FFE                        SZ      UNBALANCEF
1280  01CB  10FA                        SZ      KEY_STATE_BUF                 
1281  01CC  1F7D                        CLR     UNBALANCE_TIMER
1282  01CD                              ;--
1283  01CD  7F02                        SZ      _TKS_500MSF
1284  01CE  10FA                        SZ      KEY_STATE_BUF                  
1285  01CF  0003                        RET
1286  01D0              
1287  01D0              
1288  01D0                              ;-LOAD KEY / IO SETTING
1289  01D0  0774                        MOV     A,_KEY_IO_SEL[0]
1290  01D1  0E0F                        AND		A,00001111B
1291  01D2  00E9                        MOV     _DATA_BUF[2],A
1292  01D3              
1293  01D3  14FD                        INC     UNBALANCE_TIMER
"File: BS83B08A_CTOUCH_WATER_V501.asm  Assembler  Version 2.98      Page 23

1294  01D4                              ;--
1295  01D4                              
1296  01D4                              
1297  01D4                              
1298  01D4  1F7B                        CLR     CHANNEL_INDEX
1299  01D5                              ;----------------------
1300  01D5              RE_BALANCE_LOOP:;-CHECK RE-BALANCE LOOP        
1301  01D5                              ;------------------------
1302  01D5  1BE9                        RRC     _DATA_BUF[2]
1303  01D6  380A                        SNZ     C
1304  01D7  2800     R                  JMP     END_RE_BALANCE
1305  01D8              				
1306  01D8              ;***water check point
1307  01D8                              ; SZ		_KEY_IO_SEL[0].7
1308  01D8                         		; JMP		$+6
1309  01D8              				; SWAPA	_KEY_IO_SEL[0]
1310  01D8              				; AND		A,00000011B
1311  01D8              				; XOR		A,CHANNEL_INDEX
1312  01D8              				; SZ		Z
1313  01D8              				; JMP		END_RE_BALANCE
1314  01D8              				
1315  01D8  2000     R                  CALL    CHECK_WATER_KEY
1316  01D9  3C0A                        SZ      C
1317  01DA  2800     R                  JMP     END_RE_BALANCE
1318  01DB              ;==
1319  01DB                              ;-CHECK IF HL SWING OVER THREHSOLD
1320  01DB  2000     R                  CALL    GET_KEY_THR_MP0
1321  01DC                              ;-IF NOISE INTERFERE     
1322  01DC  2000     R                  CALL    GET_HL_DIFF_MAX_MPX
1323  01DD  0702                        MOV     A,IAR1
1324  01DE  0200                        SUB     A,IAR0
1325  01DF  3C0A                        SZ      C
1326  01E0  1F7D                        CLR     UNBALANCE_TIMER
1327  01E1              
1328  01E1              
1329  01E1              END_RE_BALANCE: ;-END OF RE-BALANCE
1330  01E1  2000     R                  CALL    CHECK_AMOUNT                             
1331  01E2  380A                        SNZ     C
1332  01E3  2800     R                  JMP     RE_BALANCE_LOOP
1333  01E4              
1334  01E4                              ;-COUNT & CHECK UNBALANCE TIMER
1335  01E4                              ;-IF UNBALANCE OVER 6/2 SEC THEN RE-INITIAL TOUCH KEY SYSTEM
1336  01E4  0F04                        MOV     A,2*1000/500    ;2SEC
1337  01E5  7F82                        SZ      POWER_ON_STABLEF
1338  01E6  0F0C                        MOV     A,6*1000/500    ;6SEC
1339  01E7  027D                        SUB     A,UNBALANCE_TIMER
1340  01E8  380A                        SNZ     C
1341  01E9  2800     R                  JMP     _LIBRARY_RESET;;_BS83B08A_CTOUCH_WATER_V501_INITIAL
1342  01EA  0003                        RET
1343  01EB              
1344  01EB              
1345  01EB              
1346  01EB              ;;***********************************************************   
1347  01EB              ;;*SUB. NAME:                                               *   
1348  01EB              ;;*INPUT    :                                               *   
1349  01EB              ;;*OUTPUT   :                                               *   
1350  01EB              ;;*USED REG.:                                               *   
1351  01EB              ;;*FUNCTION :                                               *   
1352  01EB              ;;***********************************************************  
1353  01EB              _FORCE_CALIBRATE:
"File: BS83B08A_CTOUCH_WATER_V501.asm  Assembler  Version 2.98      Page 24

1354  01EB              
1355  01EB  7802                        SNZ     _FORCE_CALIBRATEF
1356  01EC  0003                        RET
1357  01ED                              ;--
1358  01ED  7582                        CLR     _ANY_KEY_PRESSF
1359  01EE  7402                        CLR     _FORCE_CALIBRATEF
1360  01EF              
1361  01EF  1F7B                        CLR     CHANNEL_INDEX
1362  01F0              FORCE_CAL_LOOP: ;-FORCE CALIBRATE LOOP
1363  01F0                              ;-CLEAR REFERENCE WAIT DRIFT UPDATE
1364  01F0  2000     R                  CALL    GET_KEY_REF_MPX
1365  01F1  1F02                        CLR     IAR1
1366  01F2                              ;-RESET KEY STATUS & TIMER
1367  01F2  2000     R                  CALL    GET_KEY_STATUS_MPX
1368  01F3  1F02                        CLR     IAR1    ;CLEAR KEY STATUS
1369  01F4                              ;-CLEAR KEY TIMER
1370  01F4  1483                        INC     MP1
1371  01F5  1F02                        CLR     IAR1
1372  01F6                              ;--
1373  01F6  2000     R                  CALL    CHECK_AMOUNT                             
1374  01F7  380A                        SNZ     C
1375  01F8  2800     R                  JMP     FORCE_CAL_LOOP
1376  01F9              
1377  01F9                              ;-CLEAR ALL KEY STATUS
1378  01F9  1F79                        CLR     KEY_DBCE
1379  01FA                              ;--
1380  01FA                              
1381  01FA                              ;WATER STATUS DON'T CLR
1382  01FA              ;***water check point
1383  01FA                              ; SWAPA	_KEY_IO_SEL[0]
1384  01FA                              ; AND		A,00000011B
1385  01FA                              ; INC		ACC
1386  01FA                              ; MOV		_DATA_BUF[0],A
1387  01FA                              ; MOV		A,0
1388  01FA                              ; SET		C
1389  01FA                              ; RLC		ACC
1390  01FA                              ; SDZ		_DATA_BUF[0]
1391  01FA                              ; JMP		$-2
1392  01FA                              ; ANDM    A,_KEY_DATA[0]
1393  01FA                              ; ANDM    A,KEY_BUF[0]
1394  01FA                              
1395  01FA  1174                        SWAPA	_KEY_IO_SEL[0]
1396  01FB  0E0F                        AND     A,00001111B
1397  01FC  06F5                        ANDM    A,_KEY_DATA[0]
1398  01FD  06F8                        ANDM    A,KEY_BUF[0]
1399  01FE              ;==                
1400  01FE  0003                        RET
1401  01FF              
1402  01FF              
1403  01FF              
1404  01FF              
1405  01FF              
1406  01FF              
1407  01FF              
1408  01FF              
1409  01FF              ;;***********************************************************   
1410  01FF              ;;*SUB. NAME:                                               *   
1411  01FF              ;;*INPUT    :                                               *   
1412  01FF              ;;*OUTPUT   :                                               *   
1413  01FF              ;;*USED REG.:                                               *   
"File: BS83B08A_CTOUCH_WATER_V501.asm  Assembler  Version 2.98      Page 25

1414  01FF              ;;*FUNCTION :                                               *   
1415  01FF              ;;***********************************************************  
1416  01FF              _NORMAL_CALIBRATE:
1417  01FF              
1418  01FF                              ;-CHECK IF SAMPLE TIMES =XXXX0010B = 40MS
1419  01FF  3CFE                        SZ      SAMPLE_TIMES.1
1420  0200  3C7E                        SZ      SAMPLE_TIMES.0
1421  0201  0003                        RET
1422  0202              
1423  0202                              ;-CALCULATE CALIBRATE TIMER
1424  0202  5481                        INC     CAL_TIMER
1425  0203  1160                        SWAPA   _GLOBE_VARIES[TKS_OPTIONA]
1426  0204  0E0F                        AND     A,00001111B
1427  0205  1485                        INC     ACC
1428  0206  1885                        RL      ACC             ;MINI=80MS ; MAX = 1280MS
1429  0207  4201                        SUB     A,CAL_TIMER
1430  0208  380A                        SNZ     C
1431  0209  5F01                        CLR     CAL_TIMER
1432  020A              
1433  020A                              ;--------------------                                   
1434  020A                              ;-NORMAL CALIBRATION                                    
1435  020A                              ;--------------------                                   
1436  020A  1F7B                        CLR     CHANNEL_INDEX  
1437  020B                                                                                      
1438  020B              CALIBRATE_LOOP: ;-CALIBRATION LOOP
1439  020B              	
1440  020B              ;***water check point			
1441  020B                              ; SZ		_KEY_IO_SEL[0].7
1442  020B                         		; JMP		$+6
1443  020B              				; SWAPA	_KEY_IO_SEL[0]
1444  020B              				; AND		A,00000011B
1445  020B              				; XOR		A,CHANNEL_INDEX
1446  020B              				; SZ		Z
1447  020B              				; JMP		END_CALIBRATE
1448  020B                              
1449  020B  2000     R                  CALL    CHECK_WATER_KEY
1450  020C  3C0A                        SZ      C
1451  020D  2800     R                  JMP     END_CALIBRATE
1452  020E              ;==				
1453  020E  2000     R                  CALL    GET_KEY_STATUS_MPX
1454  020F  0702                        MOV     A,IAR1          ;KEY STATUS
1455  0210  00E9                        MOV     _DATA_BUF[2],A
1456  0211  1483                        INC     MP1
1457  0212  0702                        MOV     A,IAR1          ;KEY TIMER
1458  0213  00EA                        MOV     _DATA_BUF[3],A
1459  0214              
1460  0214              				
1461  0214                              ;---------------------------
1462  0214                              ;-GET NOISE COMPENASTE
1463  0214                              ;-WITH REF. LEARNNING OFFSET
1464  0214                              ;---------------------------
1465  0214                              ;-GET HL DIFF MAX
1466  0214  2000     R                  CALL    GET_HL_DIFF_MAX_MPX
1467  0215  340A                        CLR     C
1468  0216  1B02                        RRCA    IAR1            ;1/2 NOISE
1469  0217  340A                        CLR     C
1470  0218  3861                        SNZ     _GLOBE_VARIES[TKS_OPTIONB].SENS_LEVEL
1471  0219  1B02                        RRCA    IAR1            ;1/4 NOISE
1472  021A  00EB                        MOV     _DATA_BUF[4],A                      
1473  021B                       
"File: BS83B08A_CTOUCH_WATER_V501.asm  Assembler  Version 2.98      Page 26

1474  021B                            ;;;-GET KEY THRESHOLD
1475  021B                            ;;CALL    GET_KEY_THR_MP0
1476  021B                            ;;MOV     A,IAR0          ;1 THR
1477  021B  0F18                        MOV     A,NoiseLevel*3/2        ;1.5 NOISE LEVEL
1478  021C  026B                        SUB     A,_DATA_BUF[4]
1479  021D  380A                        SNZ     C
1480  021E  03EB                        ADDM    A,_DATA_BUF[4]  ;SWAP;REF LEARNNING OFFSET;MAX IS NoiseLevel
1481  021F              
1482  021F              
1483  021F                              ;-GET FREQ-REF
1484  021F  2000     R                  CALL    GET_KEY_FREQ_MPX
1485  0220  0702                        MOV     A,IAR1          ;
1486  0221                              ;-IF KEY PRESS NO COMPENSATE NOISE
1487  0221  3FE9                        SZ      _DATA_BUF[2].KEY_PRESSF
1488  0222  2800     R                  JMP     $+4
1489  0223  026B                        SUB     A,_DATA_BUF[4]  ;COMPENSATE NOISE
1490  0224  380A                        SNZ     C
1491  0225  1F05                        CLR     ACC
1492  0226                              ;--
1493  0226  1583                        DEC     MP1             ;REF 
1494  0227  0202                        SUB     A,IAR1          ;FREQ-REF
1495  0228  3D0A                        SZ      Z
1496  0229  2800     R                  JMP     END_CALIBRATE
1497  022A  00E7                        MOV     _DATA_BUF[0],A
1498  022B                              ;-SAVE C FLAG
1499  022B  1F68                        CLR     _DATA_BUF[1]
1500  022C  380A                        SNZ     C
1501  022D  1FE8                        SET     _DATA_BUF[1]
1502  022E                                
1503  022E                              ;-CHECK IF KEY PRESS
1504  022E  3FE9                        SZ      _DATA_BUF[2].KEY_PRESSF
1505  022F  2800     R                  JMP     KEY_PRESS_CAL
1506  0230                              ;-----------------
1507  0230                              ;-NORMAL CALIBRATE
1508  0230                              ;----------------- 
1509  0230                              ;-CHECK IF NEED TO FAST UP CALIBRATE
1510  0230  3868                        SNZ     _DATA_BUF[1].0  ;FALLING
1511  0231  2800     R                  JMP     RISING_CAL      ;RISING
1512  0232                            ;;JMP     DO_CALIBRATE    ;RISING
1513  0232                              ;-FALLING CALIBRATE
1514  0232  7D82                        SZ      _ANY_KEY_PRESSF
1515  0233  1F6A                        CLR     _DATA_BUF[3]
1516  0234                              ;--
1517  0234  0F02                        MOV     A,2             ;1.5SEC ~ 2 SEC BAE ON 500MS
1518  0235  026A                        SUB     A,_DATA_BUF[3]
1519  0236  380A                        SNZ     C
1520  0237  5081                        SZ      CAL_TIMER
1521  0238  2800     R                  JMP     END_CALIBRATE
1522  0239  2800     R                  JMP     DO_CALIBRATE
1523  023A                            ;;JMP     CHK_CAL_TIMER
1524  023A              
1525  023A              RISING_CAL:     ;-RISING CALIBRATE
1526  023A  3DE9                        SZ      _DATA_BUF[2].CS_INTERFEREF
1527  023B  3B82                        SNZ     IAR1.7          ;IF REF OVER 128
1528  023C  2800     R                  JMP     DO_CALIBRATE
1529  023D                              ;--
1530  023D  1FE8                        SET     _DATA_BUF[1]
1531  023E  0F80                        MOV     A,BalanceCentralPoint   
1532  023F  0202                        SUB     A,IAR1
1533  0240  00E7                        MOV     _DATA_BUF[0],A
"File: BS83B08A_CTOUCH_WATER_V501.asm  Assembler  Version 2.98      Page 27

1534  0241                              ;--
1535  0241  380A                        SNZ     C    
1536  0242  2800     R                  JMP     DO_CALIBRATE
1537  0243  2800     R                  JMP     END_CALIBRATE
1538  0244              
1539  0244              
1540  0244                              ;-----------------------                                            
1541  0244              KEY_PRESS_CAL:  ;-KEY PRESSING CALIBRATE                                            
1542  0244                              ;-----------------------
1543  0244  3FE2                        SZ      _GLOBE_VARIES[TKS_OPTIONC].ACTIVE_LOGIC                     
1544  0245  1679                        SIZA    KEY_DBCE        ;IF DEBOUCING
1545  0246  2800     R                  JMP     END_CALIBRATE
1546  0247              
1547  0247                              ;-LOAD THRESHOLD RAM                                                
1548  0247  2000     R                  CALL    GET_KEY_THR_MP0
1549  0248  340A                        CLR     C
1550  0249  1A00                        RLCA    IAR0            ;2THR
1551  024A  3C0A                        SZ      C
1552  024B  2800     R                  JMP     END_CALIBRATE
1553  024C                              ;-IF CS INTERFERE
1554  024C  3DE9                        SZ      _DATA_BUF[2].CS_INTERFEREF
1555  024D  0300                        ADD     A,IAR0          ;3THR
1556  024E                              ;--
1557  024E  3C68                        SZ      _DATA_BUF[1].0  ;IF FREQ >= REF INHIBIT
1558  024F  3C0A                        SZ      C
1559  0250  2800     R                  JMP     END_CALIBRATE
1560  0251              
1561  0251                              ;-MAX. = 64
1562  0251  3B85                        SNZ     ACC.7
1563  0252  3F05                        SZ      ACC.6
1564  0253  0F40                        MOV     A,64
1565  0254                              ;--
1566  0254  03E7                        ADDM    A,_DATA_BUF[0]
1567  0255  3C0A                        SZ      C                                                           
1568  0256  2800     R                  JMP     END_CALIBRATE 
1569  0257              
1570  0257                              ;----------------------                                 
1571  0257              DO_CALIBRATE:   ;-DO CALIBRATE FUNCTION
1572  0257                              ;----------------------
1573  0257              
1574  0257  0F02                        MOV     A,2     ;1/4 IIR
1575  0258                              ;-25% IIR
1576  0258  1BE8                        RRC     _DATA_BUF[1]
1577  0259  1BE7                        RRC     _DATA_BUF[0]
1578  025A  1785                        SDZ     ACC
1579  025B  2800     R                  JMP     $-3
1580  025C              
1581  025C                              ;-MINIMUM = 1
1582  025C  0F01                        MOV     A,1
1583  025D  3868                        SNZ     _DATA_BUF[1].0
1584  025E  10E7                        SZ      _DATA_BUF[0]
1585  025F  0767                        MOV     A,_DATA_BUF[0]
1586  0260              
1587  0260                              ;-SAVE IIR RESULT
1588  0260  0382                        ADDM    A,IAR1
1589  0261                              ;-IF "0" OVERFLOW
1590  0261  3C68                        SZ      _DATA_BUF[1].0
1591  0262  3C0A                        SZ      C
1592  0263  2800     R                  JMP     $+2
1593  0264  1F02                        CLR     IAR1
"File: BS83B08A_CTOUCH_WATER_V501.asm  Assembler  Version 2.98      Page 28

1594  0265              
1595  0265              END_CALIBRATE:  ;-END OF CALIBRATE
1596  0265  2000     R                  CALL    CHECK_AMOUNT                             
1597  0266  380A                        SNZ     C                                               
1598  0267  2800     R                  JMP     CALIBRATE_LOOP                                  
1599  0268                                                                                      
1600  0268  0003                        RET                                                     
1601  0269                                                                                      
1602  0269              ;;***********************************************************                           
1603  0269              ;;*SUB. NAME:                                               *                           
1604  0269              ;;*INPUT    :                                               *                           
1605  0269              ;;*OUTPUT   :                                               *                           
1606  0269              ;;*USED REG.:                                               *                           
1607  0269              ;;*FUNCTION :                                               *                           
1608  0269              ;;***********************************************************
1609  0269              _CHECK_KEY_TIMER:  
1610  0269  7B02                        SNZ     _TKS_500MSF
1611  026A  0003                        RET
1612  026B              
1613  026B              
1614  026B  1F7B                        CLR     CHANNEL_INDEX                           
1615  026C              CHK_KTIMER_LOOP:;-CHECK KEY TIMER  LOOP
1616  026C              
1617  026C              ;***water check point
1618  026C                              ; SZ		_KEY_IO_SEL[0].7
1619  026C                         		; JMP		$+6
1620  026C              				; SWAPA	_KEY_IO_SEL[0]
1621  026C              				; AND		A,00000011B
1622  026C              				; XOR		A,CHANNEL_INDEX
1623  026C              				; SZ		Z
1624  026C              				; JMP		END_CHK_KTIMER
1625  026C                              
1626  026C  2000     R                  CALL    CHECK_WATER_KEY
1627  026D  3C0A                        SZ      C
1628  026E  2800     R                  JMP     END_CHK_KTIMER
1629  026F              ;==              
1630  026F  2000     R                  CALL    GET_KEY_STATUS_MPX
1631  0270  0702                        MOV     A,IAR1
1632  0271  00E7                        MOV     _DATA_BUF[0],A
1633  0272                              ;-COUNT KEY TIMER
1634  0272  1483                        INC     MP1
1635  0273  1602                        SIZA    IAR1
1636  0274  0082                        MOV     IAR1,A
1637  0275                              ;-------------------                   
1638  0275                              ;-CHECK MAXON TIME -                  
1639  0275                              ;-------------------              
1640  0275  1961                        RRA     _GLOBE_VARIES[TKS_OPTIONB]
1641  0276  0E78                        AND     A,01111000B     ;DIV2 TO MATCH PER STEP 4 SEC
1642  0277  390A                        SNZ     Z
1643  0278  3BE7                        SNZ     _DATA_BUF[0].KEY_PRESSF       ;IF NO KEY PRESS
1644  0279  2800     R                  JMP     END_CHK_KTIMER  ;MAXON TIME DISABLE
1645  027A                              ;--
1646  027A  0202                        SUB     A,IAR1
1647  027B  3C0A                        SZ      C
1648  027C  2800     R                  JMP     END_CHK_KTIMER
1649  027D                              ;-LIMIT TIME OUT                               
1650  027D  1F02                        CLR     IAR1            ;CLEAR KEY TIMER        
1651  027E  1583                        DEC     MP1             ;KEY_STATUS
1652  027F  0F0F                        MOV     A,00001111B     ;HOLD CS FLAG/FILTER FLAG
1653  0280  0682                        ANDM    A,IAR1
"File: BS83B08A_CTOUCH_WATER_V501.asm  Assembler  Version 2.98      Page 29

1654  0281                              ;-CLEAR REF
1655  0281  2000     R                  CALL    GET_KEY_REF_MPX
1656  0282  1F02                        CLR     IAR1
1657  0283              
1658  0283                                                                              
1659  0283              END_CHK_KTIMER: ;-END OF CHECK MAXON TIME                       
1660  0283  2000     R                  CALL    CHECK_AMOUNT                             
1661  0284  380A                        SNZ     C                                       
1662  0285  2800     R                  JMP     CHK_KTIMER_LOOP                         
1663  0286                                                                              
1664  0286                                                                              
1665  0286  0003                        RET                                             
1666  0287                                                       
1667  0287              
1668  0287              ;;***********************************************************   
1669  0287              ;;*SUB. NAME:                                               *   
1670  0287              ;;*INPUT    :                                               *   
1671  0287              ;;*OUTPUT   :                                               *   
1672  0287              ;;*USED REG.:                                               *   
1673  0287              ;;*FUNCTION :                                               *   
1674  0287              ;;***********************************************************
1675  0287              _TKS_STATE_CHECK:
1676  0287              
1677  0287                            ;;;-CHECK IF SAMPLE TIMES =XXXXXX01B
1678  0287                            ;;SNZ     SAMPLE_TIMES.0          
1679  0287                            ;;RET
1680  0287              
1681  0287  7102                        SET     _SCAN_CYCLEF
1682  0288              
1683  0288  1F6D                        CLR     MAX_COUNT
1684  0289  1F6E                        CLR     MAX_COUNT_CHANNEL
1685  028A                              ;--
1686  028A  1F7B                        CLR     CHANNEL_INDEX
1687  028B              STATE_CHK_LOOP:
1688  028B                              ;-LOAD THRESHOLD IN IAR0 & GET HYSTERESIS
1689  028B  2000     R                  CALL    GET_KEY_THR_MP0
1690  028C  340A                        CLR     C
1691  028D  1B00                        RRCA    IAR0
1692  028E  00E8                        MOV     HYSTERESIS,A
1693  028F              
1694  028F  2000     R              CALL    CHECK_WATER_KEY
1695  0290  380A                    SNZ     C
1696  0291  2800     R              JMP     $+4
1697  0292                          
1698  0292                          ;--100% --
1699  0292  0700                    MOV     A,IAR0
1700  0293  0A02                    SUB     A,2
1701  0294  00E8                    MOV     HYSTERESIS,A
1702  0295                              
1703  0295                              ;-GET REF-FREQT FOR NEG_TCOUNT                
1704  0295  2000     R                  CALL    GET_KEY_REF_MPX
1705  0296  0702                        MOV     A,IAR1
1706  0297  1483                        INC     MP1             ;FREQ 
1707  0298  0202                        SUB     A,IAR1          ;REF-FREQ 
1708  0299  380A                        SNZ     C
1709  029A  2800     R                  JMP     $+4
1710  029B  00E9                        MOV     NEG_COUNT,A
1711  029C  1F67                        CLR     POS_COUNT
1712  029D  2800     R                  JMP     $+4
1713  029E  0185                        CPL     ACC
"File: BS83B08A_CTOUCH_WATER_V501.asm  Assembler  Version 2.98      Page 30

1714  029F  00E7                        MOV     POS_COUNT,A
1715  02A0  1F69                        CLR     NEG_COUNT
1716  02A1              
1717  02A1                              ;-CHECK KEY PRESS STATUS
1718  02A1  2000     R                  CALL    GET_KEY_STATUS_MPX
1719  02A2              
1720  02A2                              ;-IF KEY STATE              
1721  02A2  3F82                        SZ      IAR1.KEY_PRESSF
1722  02A3  2800     R                  JMP     KEY_HOLDING
1723  02A4              
1724  02A4  0700                        MOV     A,IAR0
1725  02A5  0269                        SUB     A,NEG_COUNT
1726  02A6  380A                        SNZ     C
1727  02A7  2800     R                  JMP     KEY_PRESSING
1728  02A8                              ;-CLEAR DEBOUNCE
1729  02A8  0F0F                        MOV     A,00001111B
1730  02A9  0682                        ANDM    A,IAR1
1731  02AA  2800     R                  JMP     END_STATE_CHECK
1732  02AB              
1733  02AB              KEY_PRESSING:   ;-KEY PRESSING  
1734  02AB  0F10                        MOV     A,00010000B
1735  02AC  0382                        ADDM    A,IAR1
1736  02AD  3A82                        SNZ     IAR1.5
1737  02AE  2800     R                  JMP     END_STATE_CHECK
1738  02AF              
1739  02AF                              ;-CLEAR DEBOUNCE
1740  02AF  0F0F                        MOV     A,00001111B
1741  02B0  0682                        ANDM    A,IAR1
1742  02B1  3382                        SET     IAR1.KEY_PRESSF
1743  02B2              
1744  02B2              
1745  02B2                      ifdef   OneKeyActiveFunction
1746  02B2                              ;------------------------
1747  02B2                              ;-IF ONE KEY ACTIVE     -
1748  02B2                              ;------------------------
1749  02B2                              SZ      _GLOBE_VARIES[TKS_OPTIONC].ONE_KEY_ACTIVE
1750  02B2                              SNZ     _ANY_KEY_PRESSF
1751  02B2                              JMP     CLR_KEY_TIMER
1752  02B2                              ;-IF ANY KEY ALREADY PRESSED
1753  02B2                              CLR     IAR1.KEY_PRESSF
1754  02B2                              ;-CLEAR KEY TIMER
1755  02B2                              INC     MP1
1756  02B2                              CLR     IAR1
1757  02B2                              ;-UPDATE REF
1758  02B2                              CALL    GET_KEY_FREQ_MPX
1759  02B2                              MOV     A,IAR1
1760  02B2                              DEC     MP1             ;REF
1761  02B2                              MOV     IAR1,A
1762  02B2                              JMP     END_STATE_CHECK
1763  02B2                      else
1764  02B2  2800     R                  JMP     CLR_KEY_TIMER
1765  02B3                      endif   ;-end of one key active define                     
1766  02B3              
1767  02B3                              ;----------------   
1768  02B3              KEY_HOLDING:    ;-KEY HOLDING   -
1769  02B3                              ;----------------
1770  02B3  0769                        MOV     A,NEG_COUNT
1771  02B4  0268                        SUB     A,HYSTERESIS
1772  02B5  380A                        SNZ     C
1773  02B6  2800     R                  JMP     KEY_RELEASING
"File: BS83B08A_CTOUCH_WATER_V501.asm  Assembler  Version 2.98      Page 31

1774  02B7  0F8F                        MOV     A,10001111B     ;CLEAR DEBOUNCE
1775  02B8  0682                        ANDM    A,IAR1
1776  02B9              
1777  02B9                      ifdef   OneKeyActiveFunction
1778  02B9                              ;------------------------
1779  02B9                              ;-IF ONE KEY ACTIVE     -
1780  02B9                              ;------------------------
1781  02B9                              SNZ     _GLOBE_VARIES[TKS_OPTIONC].ONE_KEY_ACTIVE 
1782  02B9                              JMP     END_STATE_CHECK
1783  02B9                              MOV     A,NEG_COUNT
1784  02B9                              SUB     A,IAR0
1785  02B9                              SUB     A,MAX_COUNT
1786  02B9                              SNZ     C
1787  02B9                              JMP     END_STATE_CHECK
1788  02B9                              ADDM    A,MAX_COUNT
1789  02B9                              MOV     A,CHANNEL_INDEX
1790  02B9                              MOV     MAX_COUNT_CHANNEL,A
1791  02B9                      endif   ;-end of one key active define                     
1792  02B9  2800     R                  JMP     END_STATE_CHECK
1793  02BA              
1794  02BA              KEY_RELEASING:  ;-KEY RELEASING
1795  02BA  0F10                        MOV     A,00010000B
1796  02BB  0382                        ADDM    A,IAR1
1797  02BC  3A82                        SNZ     IAR1.5
1798  02BD  2800     R                  JMP     END_STATE_CHECK
1799  02BE  0F0F                        MOV     A,00001111B
1800  02BF  0682                        ANDM    A,IAR1
1801  02C0              CLR_KEY_TIMER:  ;-CLEAR KEY TIMER
1802  02C0  1483                        INC     MP1
1803  02C1  1F02                        CLR     IAR1            ;CLEEAR KEY TIMER
1804  02C2                                                                                              
1805  02C2              END_STATE_CHECK:;-END OF KEY STATE CHECK
1806  02C2  2000     R                  CALL    CHECK_AMOUNT                                        
1807  02C3  380A                        SNZ     C                                                       
1808  02C4  2800     R                  JMP     STATE_CHK_LOOP                                          
1809  02C5                                
1810  02C5                                                                                              
1811  02C5              
1812  02C5              ;;***********************************************************   
1813  02C5              ;;*SUB. NAME:                                               *   
1814  02C5              ;;*INPUT    :                                               *   
1815  02C5              ;;*OUTPUT   :                                               *   
1816  02C5              ;;*USED REG.:                                               *   
1817  02C5              ;;*FUNCTION :                                               *   
1818  02C5              ;;***********************************************************  
1819  02C5              _GET_KEY:            
1820  02C5                              ;----------------------
1821  02C5                              ;-CHECK ALL KEY STATUS-
1822  02C5                              ;----------------------
1823  02C5  1F7A                        CLR     KEY_STATE_BUF  
1824  02C6  1F67                        CLR     _DATA_BUF[0]
1825  02C7                              ;------------------------
1826  02C7                      if      KeyAmount > 8
1827  02C7                              CLR     _DATA_BUF[1]
1828  02C7                      endif   ;------------------------
1829  02C7                      if      KeyAmount > 16
1830  02C7                              CLR     _DATA_BUF[2]
1831  02C7                      endif   ;------------------------
1832  02C7              
1833  02C7  1F6C                        CLR     KPRESS_AMOUNT
"File: BS83B08A_CTOUCH_WATER_V501.asm  Assembler  Version 2.98      Page 32

1834  02C8  0F04                        MOV     A,KeyAmount
1835  02C9  00FB                        MOV     CHANNEL_INDEX,A
1836  02CA  2000     R                  CALL    GET_KEY_STATUS_MPX
1837  02CB                              
1838  02CB              ;***water check point
1839  02CB  0774                        MOV     A,_KEY_IO_SEL[0]
1840  02CC  00EE                        MOV     _DATA_BUF[7],A
1841  02CD              ;==
1842  02CD              GET_KSTS_LOOP:  ;-GET KEY STATUS LOOP & GET KEY PRESS AMOUNT
1843  02CD  0FFE                        MOV     A,100H-2                ;OFFSET 2
1844  02CE  0383                        ADDM    A,MP1
1845  02CF                              ;--
1846  02CF                              
1847  02CF              ;***water check point
1848  02CF  1AEE                        RLC     _DATA_BUF[7]
1849  02D0  3C0A                        SZ      C
1850  02D1  2800     R                  JMP     $+4
1851  02D2              ;==
1852  02D2  0702                        MOV     A,IAR1
1853  02D3  0EF0                        AND     A,11110000B             ;IGNORE CS DEBOUNCE BIT
1854  02D4  05FA                        ORM     A,KEY_STATE_BUF
1855  02D5                              ;-COUNT TPRESS AMOUNT
1856  02D5  3F82                        SZ      IAR1.KEY_PRESSF
1857  02D6  14EC                        INC     KPRESS_AMOUNT           ;COUNT PRESS KEY AMOUNT 
1858  02D7                              ;--
1859  02D7  340A                        CLR     C
1860  02D8  3F82                        SZ      IAR1.KEY_PRESSF
1861  02D9  300A                        SET     C
1862  02DA                              ;-GET KEY PRESS FLAG
1863  02DA  1AE7                        RLC     _DATA_BUF[0]
1864  02DB                              ;------------------------
1865  02DB                      if      KeyAmount > 8
1866  02DB                              RLC     _DATA_BUF[1]
1867  02DB                      endif   ;------------------------
1868  02DB                      if      KeyAmount > 16
1869  02DB                              RLC     _DATA_BUF[2]
1870  02DB                      endif   ;------------------------
1871  02DB                      NEXT_GET_KSTS_LOOP:
1872  02DB  17FB                        SDZ     CHANNEL_INDEX
1873  02DC  2800     R                  JMP     GET_KSTS_LOOP
1874  02DD              
1875  02DD              
1876  02DD                              ;-KEY DEBOUNCE
1877  02DD  0767                        MOV     A,_DATA_BUF[0]
1878  02DE  04F8                        XORM    A,KEY_BUF[0]
1879  02DF  00F8                        MOV     KEY_BUF[0],A
1880  02E0  390A                        SNZ     Z
1881  02E1  1F79                        CLR     KEY_DBCE
1882  02E2                              ;------------------------
1883  02E2                      if      KeyAmount > 8
1884  02E2                              MOV     A,_DATA_BUF[1]
1885  02E2                              XORM    A,KEY_BUF[1]
1886  02E2                              MOV     KEY_BUF[1],A
1887  02E2                              SNZ     Z
1888  02E2                              CLR     KEY_DBCE
1889  02E2                      endif   ;------------------------
1890  02E2                      if      KeyAmount > 16
1891  02E2                              MOV     A,_DATA_BUF[2]
1892  02E2                              XORM    A,KEY_BUF[2]
1893  02E2                              MOV     KEY_BUF[2],A
"File: BS83B08A_CTOUCH_WATER_V501.asm  Assembler  Version 2.98      Page 33

1894  02E2                              SNZ     Z
1895  02E2                              CLR     KEY_DBCE
1896  02E2                      endif   ;------------------------
1897  02E2              
1898  02E2                              ;------------------------
1899  02E2                              ;-CHECK IF DEBOUNCE DONE-
1900  02E2                              ;------------------------
1901  02E2  1479                        INCA    KEY_DBCE
1902  02E3  3D0A                        SZ      Z
1903  02E4  0003                        RET
1904  02E5  00F9                        MOV     KEY_DBCE,A
1905  02E6              
1906  02E6              
1907  02E6                              ;-LOAD DEBOUNCE SETTING
1908  02E6  0760                        MOV     A,_GLOBE_VARIES[TKS_OPTIONA]
1909  02E7  0E0F                        AND     A,00001111B             ;MAX=15
1910  02E8  1485                        INC     ACC                     ;MIN=1
1911  02E9  3DFA                        SZ      KEY_STATE_BUF.CS_INTERFEREF
1912  02EA  1485                        INC     ACC
1913  02EB                              
1914  02EB  00E8        MOV     _DATA_BUF[1],A
1915  02EC  2000     R  CALL    CHECK_WATER_KEY
1916  02ED  380A        SNZ     C
1917  02EE  2800     R  JMP     $+5
1918  02EF              ;--WATER DABOUNCE = TOUCH KEY DEBOUNCE * 2 + 16
1919  02EF  340A        CLR     C
1920  02F0  1AE8        RLC     _DATA_BUF[1]
1921  02F1  0F10        MOV     A,16
1922  02F2  03E8        ADDM    A,_DATA_BUF[1]
1923  02F3              
1924  02F3  0768        MOV     A,_DATA_BUF[1]
1925  02F4              
1926  02F4                      ifdef   OneKeyActiveFunction
1927  02F4                              ;-IF ONE KEY ACITVE 
1928  02F4                              SZ      _GLOBE_VARIES[TKS_OPTIONC].ONE_KEY_ACTIVE 
1929  02F4                              ADD     A,KPRESS_AMOUNT
1930  02F4                      endif   ;-end of one key active define                     
1931  02F4              
1932  02F4                              ;-CHECK DEBOUNCE TIME
1933  02F4  0279                        SUB     A,KEY_DBCE
1934  02F5  3C0A                        SZ      C
1935  02F6  0003                        RET
1936  02F7  1FF9                        SET     KEY_DBCE
1937  02F8              
1938  02F8              
1939  02F8                      ifdef   OneKeyActiveFunction
1940  02F8                              ;------------------------            
1941  02F8                              ;-IF ONE_KEY_ACTIVE     -
1942  02F8                              ;------------------------           
1943  02F8                              SNZ     _GLOBE_VARIES[TKS_OPTIONC].ONE_KEY_ACTIVE               
1944  02F8                              JMP     GET_KEY_STATUS
1945  02F8                              ;-IF ONLY ONE KEY OR NONE KEY PRESSED                   
1946  02F8                              DECA    KPRESS_AMOUNT                                           
1947  02F8                              SZ      KPRESS_AMOUNT                                           
1948  02F8                              SZ      Z                                                       
1949  02F8                              JMP     GET_KEY_STATUS                                          
1950  02F8                                                                                              
1951  02F8                              ;-MASK KEY                                                      
1952  02F8                              CLR     CHANNEL_INDEX                                           
1953  02F8              MASK_KEY_LOOP:  ;--      
"File: BS83B08A_CTOUCH_WATER_V501.asm  Assembler  Version 2.98      Page 34

1954  02F8                              MOV     A,KPRESS_AMOUNT                                         
1955  02F8                              SUB     A,3             ;OVER 3 KEY                             
1956  02F8                              SZ      C                                                       
1957  02F8                              SET     MAX_COUNT_CHANNEL       ;ALL KEY INHIBIT
1958  02F8                              ;--
1959  02F8                              MOV     A,CHANNEL_INDEX
1960  02F8                              XOR     A,MAX_COUNT_CHANNEL
1961  02F8                              SZ      Z
1962  02F8                              JMP     END_MASK_KEY
1963  02F8                              ;-MASK INVALID KEY
1964  02F8                              CALL    GET_KEY_STATUS_MPX
1965  02F8                              CLR     IAR1.KEY_PRESSF
1966  02F8                              ;-REF-FREQ
1967  02F8                              CALL    GET_KEY_FREQ_MPX
1968  02F8                              MOV     A,IAR1
1969  02F8                              DEC     MP1             ;REF
1970  02F8                              MOV     IAR1,A
1971  02F8              END_MASK_KEY:   ;----                                                           
1972  02F8                              CALL    CHECK_AMOUNT                                        
1973  02F8                              SNZ     C                                                       
1974  02F8                              JMP     MASK_KEY_LOOP                                           
1975  02F8                                                                                              
1976  02F8                              ;----------------                                               
1977  02F8                              ;-GET ONE KEY   -                                               
1978  02F8                              ;----------------                                               
1979  02F8                              CLR     KEY_BUF[0]                                              
1980  02F8                              ;------------------------                                       
1981  02F8                      if      KeyAmount > 8                                                   
1982  02F8                              CLR     KEY_BUF[1]                                              
1983  02F8                      endif   ;------------------------                                       
1984  02F8                      if      KeyAmount > 16                                                  
1985  02F8                              CLR     KEY_BUF[2]                                              
1986  02F8                      endif   ;------------------------
1987  02F8                                                             
1988  02F8                              INC     MAX_COUNT_CHANNEL       ;IF =FF IS INHIBIT 
1989  02F8                              SZ      Z
1990  02F8                              RET    
1991  02F8                                          
1992  02F8                              SET     C                                                       
1993  02F8              GET_ONEKEY_LOOP:;-                                                              
1994  02F8                              RLC     KEY_BUF[0]                                              
1995  02F8                              ;------------------------                                       
1996  02F8                      if      KeyAmount > 8                                                   
1997  02F8                              RLC     KEY_BUF[1]                                              
1998  02F8                      endif   ;------------------------                                       
1999  02F8                      if      KeyAmount > 16                                                  
2000  02F8                              RLC     KEY_BUF[2]                                              
2001  02F8                      endif   ;------------------------                                       
2002  02F8                              CLR     C                                                       
2003  02F8                              SDZ     MAX_COUNT_CHANNEL                                       
2004  02F8                              JMP     GET_ONEKEY_LOOP                                         
2005  02F8                      endif   ;-end of one key active define                     
2006  02F8              
2007  02F8                              ;--------------------
2008  02F8              GET_KEY_STATUS: ;-GET KEY STATUS
2009  02F8                              ;--------------------
2010  02F8  0778                        MOV     A,KEY_BUF[0]
2011  02F9  00F5                        MOV     _KEY_DATA[0],A
2012  02FA                              ;------------------------
2013  02FA                      if      KeyAmount > 8 
"File: BS83B08A_CTOUCH_WATER_V501.asm  Assembler  Version 2.98      Page 35

2014  02FA                              MOV     A,KEY_BUF[1]
2015  02FA                              MOV     _KEY_DATA[1],A
2016  02FA                      endif   ;------------------------
2017  02FA                      if      KeyAmount > 16
2018  02FA                              MOV     A,KEY_BUF[2]
2019  02FA                              MOV     _KEY_DATA[2],A
2020  02FA                      endif   ;------------------------
2021  02FA              
2022  02FA              
2023  02FA                              ;--------------------
2024  02FA                              ;-CHECK ANY KEY PRESS
2025  02FA                              ;--------------------
2026  02FA  7582                        CLR     _ANY_KEY_PRESSF
2027  02FB  10EC                        SZ      KPRESS_AMOUNT           ;KEY AMOUNT
2028  02FC  7182                        SET     _ANY_KEY_PRESSF
2029  02FD              
2030  02FD  0003                        RET
2031  02FE              
2032  02FE                                            
2033  02FE              ;;***********************************************************   
2034  02FE              ;;*SUB. NAME:                                               *   
2035  02FE              ;;*INPUT    :                                               *   
2036  02FE              ;;*OUTPUT   :                                               *   
2037  02FE              ;;*USED REG.:                                               *   
2038  02FE              ;;*FUNCTION :                                               *   
2039  02FE              ;;***********************************************************   
2040  02FE              _TKS_TIMER:    
2041  02FE                              ;-CHECK 62.5 MS
2042  02FE  14FF                        INC     TKS_TIMER
2043  02FF  077F                        MOV     A,TKS_TIMER
2044  0300  0A06                        SUB     A,6 ;1;2            ;62.5  MS ;31.25MS BASE ON 2.56MS
2045  0301  380A                        SNZ     C
2046  0302  0003                        RET
2047  0303  1F7F                        CLR     TKS_TIMER
2048  0304              
2049  0304                              ;--
2050  0304  5480                        INC     TKS_TIMERB
2051  0305              
2052  0305  4700                        MOV     A,TKS_TIMERB
2053  0306                              ;--                 
2054  0306  0E7F                        AND     A,01111111B     ;8SEC
2055  0307  3D0A                        SZ      Z
2056  0308  7382                        SET     POWER_ON_STABLEF;POWER ON STABLE AFTER 8 SEC
2057  0309                              ;--
2058  0309  0E07                        AND     A,00000111B;00000111B          
2059  030A  3D0A                        SZ      Z
2060  030B  7302                        SET     _TKS_500MSF     ;500 MSF
2061  030C                              ;--
2062  030C  0E03                        AND     A,00000011B;00000011B
2063  030D  3D0A                        SZ      Z
2064  030E  7282                        SET     _TKS_250MSF     ;250 MSF
2065  030F              
2066  030F  7202                        SET     _TKS_63MSF      ;62.5NSF
2067  0310              
2068  0310  0003                        RET
2069  0311                                                
2070  0311              
2071  0311                                             
2072  0311              ;;***********************************************************   
2073  0311              ;;*SUB. NAME:                                               *   
"File: BS83B08A_CTOUCH_WATER_V501.asm  Assembler  Version 2.98      Page 36

2074  0311              ;;*INPUT    :CHANNEL_INDEX                                  *   
2075  0311              ;;*OUTPUT   :                                               *   
2076  0311              ;;*USED REG.:                                               *   
2077  0311              ;;*FUNCTION :                                               *   
2078  0311              ;;***********************************************************
2079  0311              
2080  0311              CHECK_AMOUNT:
2081  0311  14FB                        INC     CHANNEL_INDEX
2082  0312  077B                        MOV     A,CHANNEL_INDEX
2083  0313  0A04                        SUB     A,KeyAmount
2084  0314  0003                        RET
2085  0315                              
2086  0315              ;;***********************************************************   
2087  0315              ;;*SUB. NAME:                                               *   
2088  0315              ;;*INPUT    :CHANNEL_INDEX                                  *   
2089  0315              ;;*OUTPUT   :                                               *   
2090  0315              ;;*USED REG.:                                               *   
2091  0315              ;;*FUNCTION :                                               *   
2092  0315              ;;***********************************************************
2093  0315              GET_KEY_STATUS_MPX:
2094  0315  0F00     R                  MOV     A,BANK _KEY_STATUS
2095  0316  0084                        MOV     BP,A
2096  0317  0F83                        MOV     A,OFFSET _KEY_STATUS
2097  0318  0083                        MOV     MP1,A
2098  0319  187B                        RLA     CHANNEL_INDEX
2099  031A  0383                        ADDM    A,MP1
2100  031B  0003                        RET
2101  031C              
2102  031C              ;;***********************************************************   
2103  031C              ;;*SUB. NAME:                                               *   
2104  031C              ;;*INPUT    :CHANNEL_INDEX                                  *   
2105  031C              ;;*OUTPUT   :                                               *   
2106  031C              ;;*USED REG.:                                               *   
2107  031C              ;;*FUNCTION :                                               *   
2108  031C              ;;***********************************************************
2109  031C              GET_BALANCE_CAP_MPX:
2110  031C              GET_BALANCE_CAP3M_MPX:
2111  031C  0F8D                        MOV     A,OFFSET _BALANCE_CAP3M
2112  031D  2800     R                  JMP     GET_REF_BANK;_MPX
2113  031E              GET_BALANCE_CAP11M_MPX:
2114  031E  0F8E                        MOV     A,OFFSET _BALANCE_CAP11M
2115  031F  2800     R                  JMP     GET_REF_BANK;_MPX
2116  0320              ;;***********************************************************   
2117  0320              ;;*SUB. NAME:                                               *   
2118  0320              ;;*INPUT    :CHANNEL_INDEX                                  *   
2119  0320              ;;*OUTPUT   :                                               *   
2120  0320              ;;*USED REG.:                                               *   
2121  0320              ;;*FUNCTION :                                               *   
2122  0320              ;;***********************************************************
2123  0320              GET_KEY_FREQ_MPX:
2124  0320  0F8C                        MOV     A,OFFSET _KEY_FREQ
2125  0321  2800     R                  JMP     GET_REF_BANK;_MPX
2126  0322              ;;***********************************************************   
2127  0322              ;;*SUB. NAME:                                               *   
2128  0322              ;;*INPUT    :CHANNEL_INDEX                                  *   
2129  0322              ;;*OUTPUT   :                                               *   
2130  0322              ;;*USED REG.:                                               *   
2131  0322              ;;*FUNCTION :                                               *   
2132  0322              ;;***********************************************************
2133  0322              GET_KEY_REF_MPX:
"File: BS83B08A_CTOUCH_WATER_V501.asm  Assembler  Version 2.98      Page 37

2134  0322  0F8B                        MOV     A,OFFSET _KEY_REF
2135  0323              GET_REF_BANK:
2136  0323  0083                        MOV     MP1,A
2137  0324  0F00     R                  MOV     A,BANK _KEY_REF                                                 
2138  0325  2800     R                  JMP     GET_4OFFSET_MPX
2139  0326              
2140  0326              ;;***********************************************************   
2141  0326              ;;*SUB. NAME:                                               *   
2142  0326              ;;*INPUT    :CHANNEL_INDEX                                  *   
2143  0326              ;;*OUTPUT   :                                               *   
2144  0326              ;;*USED REG.:                                               *   
2145  0326              ;;*FUNCTION :                                               *   
2146  0326              ;;***********************************************************
2147  0326              GET_M3_LIMIT_MPX:
2148  0326  0F9B                        MOV     A,OFFSET _M3_LIMIT
2149  0327  2800     R                  JMP     GET_M3_LIMIT_BANK
2150  0328              GET_HL_DIFF_MAX_MPX:
2151  0328  0F9E                        MOV     A,OFFSET _HL_DIFF_MAX
2152  0329                              ;;JMP     GET_M3_LIMIT_BANK
2153  0329              GET_M3_LIMIT_BANK:
2154  0329  0083                        MOV     MP1,A
2155  032A  0F00     R                  MOV     A,BANK _M3_LIMIT                                               
2156  032B  2800     R                  JMP     GET_4OFFSET_MPX
2157  032C              
2158  032C              ;;***********************************************************   
2159  032C              ;;*SUB. NAME:                                               *   
2160  032C              ;;*INPUT    :CHANNEL_INDEX                                  *   
2161  032C              ;;*OUTPUT   :                                               *   
2162  032C              ;;*USED REG.:                                               *   
2163  032C              ;;*FUNCTION :                                               *   
2164  032C              ;;***********************************************************
2165  032C              GET_M11_LIMIT_MPX:
2166  032C  0FAB                        MOV     A,OFFSET _M11_LIMIT
2167  032D  2800     R                  JMP     GET_M11_LIMIT_BANK
2168  032E              
2169  032E              GET_LAST_FREQ_MPX:
2170  032E  0FAE                        MOV     A,OFFSET _LAST_FREQ   
2171  032F                              ;;JMP     GET_M11_LIMIT_BANK
2172  032F              GET_M11_LIMIT_BANK:
2173  032F  0083                        MOV     MP1,A
2174  0330  0F00     R                  MOV     A,BANK _M11_LIMIT
2175  0331                                                                             
2176  0331              
2177  0331              GET_4OFFSET_MPX:;-GET RAM MPX WITH 4 OFFSET
2178  0331  0084                        MOV     BP,A
2179  0332  187B                        RLA     CHANNEL_INDEX
2180  0333  1885                        RL      ACC
2181  0334  0383                        ADDM    A,MP1
2182  0335  0003                        RET                  
2183  0336              
2184  0336              ;;***********************************************************   
2185  0336              ;;*SUB. NAME:                                               *   
2186  0336              ;;*INPUT    :                                               *   
2187  0336              ;;*OUTPUT   :                                               *   
2188  0336              ;;*USED REG.:                                               *   
2189  0336              ;;*FUNCTION :                                               *   
2190  0336              ;;***********************************************************
2191  0336              GET_KEY_THR_MP0:
2192  0336  077B                        MOV     A,CHANNEL_INDEX
2193  0337  0B63                        ADD     A,OFFSET _GLOBE_VARIES[KEY1_THR]
"File: BS83B08A_CTOUCH_WATER_V501.asm  Assembler  Version 2.98      Page 38

2194  0338  0081                        MOV     MP0,A
2195  0339  0003                        RET
2196  033A              
2197  033A              
2198  033A                                                                               
2199  033A              ;;===============================                                
2200  033A              ;;=EXTERNAL REFERENCE SUBROUTIN==                                
2201  033A              ;;===============================                                
2202  033A                                                                              
2203  033A                                                                              
2204  033A                                                                              
2205  033A              ;;***********************************************************   
2206  033A              ;;*SUB. NAME:                                               *   
2207  033A              ;;*INPUT    :NONE                                           *   
2208  033A              ;;*USED REG.:ACC , _DATA_BUF[0] ,_DATA_BUF[1]               *   
2209  033A              ;;*USED REG.:                                               *   
2210  033A              ;;*FUNCTION :                                               *   
2211  033A              ;;***********************************************************   
2212  033A              _GET_LIB_VER:                                                   
2213  033A  0F01                        MOV     A,LOW LibraryVersion                    
2214  033B  00E7                        MOV     _DATA_BUF[0],A                          
2215  033C  0F05                        MOV     A,HIGH LibraryVersion                   
2216  033D  00E8                        MOV     _DATA_BUF[1],A   
2217  033E                                                                     
2218  033E              _GET_KEY_AMOUNT:                                                
2219  033E  0F04                        MOV     A,KeyAmount                             
2220  033F  0003                        RET
2221  0340                              
2222  0340              _GET_KEY_AMOUNTx3:                        
2223  0340  0F04                        MOV     A,KeyAmount
2224  0341  0B04                        ADD     A,KeyAmount
2225  0342  0B04                        ADD     A,KeyAmount             
2226  0343  0003                        RET
2227  0344                                                                              
2228  0344                                                                              
2229  0344              ;;***********************************************************   
2230  0344              ;;*SUB. NAME:                                               *   
2231  0344              ;;*INPUT    :NONE                                           *   
2232  0344              ;;*OUTPUT   :_DATA_BUF[1];_DATA_BUF[0]                      *   
2233  0344              ;;*USED REG.:                                               *   
2234  0344              ;;*FUNCTION :                                               *   
2235  0344              ;;***********************************************************   
2236  0344                              ;---------------                                
2237  0344              _GET_KEY_BITMAP:;-READ KEY LEVEL                                
2238  0344                              ;---------------
2239  0344  0775                        MOV     A,_KEY_DATA[0]
2240  0345  00E7                        MOV     _DATA_BUF[0],A
2241  0346                              ;------------------------
2242  0346                      if      KeyAmount > 8
2243  0346                              MOV     A,_KEY_DATA[1]
2244  0346                              MOV     _DATA_BUF[1],A
2245  0346                      endif   ;------------------------
2246  0346                      if      KeyAmount > 16
2247  0346                              MOV     A,_KEY_DATA[2]
2248  0346                              MOV     _DATA_BUF[2],A
2249  0346                      endif   ;------------------------
2250  0346  0003                        RET
2251  0347              
2252  0347                                                                              
2253  0347                                                                            
"File: BS83B08A_CTOUCH_WATER_V501.asm  Assembler  Version 2.98      Page 39

2254  0347              ;;***********************************************************   
2255  0347              ;;*SUB. NAME:                                               *   
2256  0347              ;;*INPUT    :ACC                                            *   
2257  0347              ;;*OUTPUT   :_DATA_BUF[0],_DATA_BUF[1]                      *   
2258  0347              ;;*USED REG.:ACC , _DATA_BUF[0] , MP1 , IAR1 , BP           *   
2259  0347              ;;*FUNCTION :GET "RCC" VALUE                                *   
2260  0347              ;;***********************************************************  
2261  0347              _GET_RCC_VALUE:               
2262  0347  00E7                        MOV     _DATA_BUF[0],A
2263  0348  0F8D                        MOV     A,OFFSET _BALANCE_CAP3M
2264  0349  2800     R                  JMP     GET_VALUE
2265  034A              
2266  034A                                                                              
2267  034A              ;;***********************************************************   
2268  034A              ;;*SUB. NAME:                                               *   
2269  034A              ;;*INPUT    :ACC 0=KEY1 ; 1=KEY2....                        *   
2270  034A              ;;*OUTPUT   :_DATA_BUF[1],_DATA_BUF[0]                      *   
2271  034A              ;;*USED REG.:ACC,_DATA_BUF[0]~_DATA_BUF[3],MP1,IAR1,BP      *   
2272  034A              ;;*FUNCTION :GET "ENV" VALUE                                *   
2273  034A              ;;*********************************************************** 
2274  034A              _GET_ENV_VALUE:
2275  034A  00E7                        MOV     _DATA_BUF[0],A
2276  034B  0F8C                        MOV     A,OFFSET _KEY_FREQ
2277  034C  2800     R                  JMP     GET_VALUE
2278  034D                                                                              
2279  034D              ;;***********************************************************   
2280  034D              ;;*SUB. NAME:                                               *   
2281  034D              ;;*INPUT    :ACC 0=KEY1 ; 1=KEY2....                        *   
2282  034D              ;;*OUTPUT   :_DATA_BUF[0],_DATA_BUF[1]                      *   
2283  034D              ;;*USED REG.:ACC,_DATA_BUF[0]~_DATA_BUF[3],MP1,IAR1,BP      *   
2284  034D              ;;*FUNCTION :GET "REF" VALUE                                *   
2285  034D              ;;***********************************************************
2286  034D              _GET_REF_VALUE:          
2287  034D  00E7                        MOV     _DATA_BUF[0],A
2288  034E  0F8B                        MOV     A,OFFSET _KEY_REF
2289  034F              GET_VALUE:      ;-----
2290  034F  00E8                        MOV     _DATA_BUF[1],A
2291  0350                              ;-PUSH MP1,BP
2292  0350  0703                        MOV     A,MP1
2293  0351  00EA                        MOV     MP_BUF,A
2294  0352  0704                        MOV     A,BP
2295  0353  00E9                        MOV     BP_BUF,A
2296  0354                              ;--
2297  0354  0F00     R                  MOV     A,BANK _KEY_REF 
2298  0355  0084                        MOV     BP,A
2299  0356              
2300  0356              GET_VALUE_4OFFSET:;-OFFSET 4 BYTE
2301  0356  1867                        RLA     _DATA_BUF[0]
2302  0357  1885                        RL      ACC             
2303  0358  0368                        ADD     A,_DATA_BUF[1]
2304  0359  0083                        MOV     MP1,A
2305  035A  0702                        MOV     A,IAR1
2306  035B  00E7                        MOV     _DATA_BUF[0],A
2307  035C  1F68                        CLR     _DATA_BUF[1]
2308  035D              
2309  035D              POP_MP1_BP:     ;-POP BP & MP1 CONTENT  
2310  035D  0769                        MOV     A,BP_BUF
2311  035E  0084                        MOV     BP,A
2312  035F  076A                        MOV     A,MP_BUF            
2313  0360  0083                        MOV     MP1,A                                   
"File: BS83B08A_CTOUCH_WATER_V501.asm  Assembler  Version 2.98      Page 40

2314  0361  0003                        RET                                             
2315  0362              
2316  0362              CHECK_WATER_KEY:
2317  0362  077B                        MOV     A,CHANNEL_INDEX
2318  0363  1485                        INC     ACC
2319  0364  00E7                        MOV     _DATA_BUF[0],A
2320  0365  1174                        SWAPA   _KEY_IO_SEL[0]
2321  0366                              
2322  0366  1B85                        RRC     ACC
2323  0367  17E7                        SDZ     _DATA_BUF[0]
2324  0368  2800     R                  JMP     $-2
2325  0369  0003                        RET
2326  036A                              
2327  036A                              
2328  036A                              END 


        0 Errors, 0 Warnings